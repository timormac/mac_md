-- DROP FUNCTION dm.sp_jxkh_nor_crd_trade_m(bpchar, bpchar);

CREATE OR REPLACE FUNCTION dm.sp_jxkh_nor_crd_trade_m(p_start_dt character, p_end_dt character)
 RETURNS integer
 LANGUAGE plpgsql
AS $function$
  
  

--1.基本说明×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××--
  /*
     名称及实现功能: 薪酬预处理
     创建作者：庄辉
     创建时间：20231109

     目标表英文:dm.jxkh_nor_trade_bf2018_m,dm.jxkh_crd_trade_bf2018_m,dm.jxkh_nor_trade_af2018_m,dm.jxkh_crd_trade_af2018_m
     目标表中文:
     目标表主键:
     目标表增量字段:occur_month
     目标表日增数据量:300w
     目标表频率:交易日

     依赖表:staging.mg_cfjl_crmii_tryjbxx
            dwd.pty_emp_raw 
        dwd.acc_cfjl_team
        dwd.acc_cfjl_team_member
        dwd.acc_cfjl_srvrel
        staging.cfjl_crmii_tkhdyxz
        staging.cfjl_crmii_tdyxzmb 
        staging.cfjl_crmii_trydyxz
        staging.cfjl_crmii_tyybdyxz
        dwd.prod_wind_fxrmbmidrate
        dwd.ast_nor_acc_his_fund_stock_chg
        dwd.ast_nor_acc_undlvr_fnd_stk_chg
        dwd.prod_b_sec_code stk
                dwd.trade_nor_acc_his_done_intl
        dwd.ast_rzrq_ks_his_fund_stock_chg 
                staging.rzrq_ks_b_sec_code sec
                dwd.trade_rzrq_ks_his_done 
        dwd.acc_cfjl_crd_info
        staging.cfjl_CRMII_TYJLQDPZ 
                staging.mg_cfjl_CRMII_LBORGANIZATION
        dwd.dim_org_branch
        staging.cfjl_crmii_ttcfs_kh
        staging.cfjl_crmii_tkhxx
        staging.cfjl_dsc_cfg_t_yyslcs 
                dm.jxkh_sec_stat_class
        
     依赖表频率:交易日

     
  */
  /*
     修改人员：xxx
     修改时间：xxx
     修改内容：xxx
  */

  --2.单元测试×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××--
  /*
    1.必要业务代码已统一
    2.可跨日期跑批，数据不重复
    3.未发现occur_month转换date非法字段
    4.xxx
  */

  --3.参数定义×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××--
    --定义变量全部用V_开头
    declare
    v_job_nm character varying := 'dm.sp_jxkh_nor_crd_trade_m'; --作业名
    v_row_cnt numeric(28); --记录数据插入量
    v_start_dt date; --开始日期
    v_end_dt date; --结束日期
    v_return_code integer; --返回值
    v_run_start timestamp;--job运行开始时间
    v_run_end timestamp;--job运行结束时间
    rec record;--游标
    v_month varchar;--月份
    v_first_monthday date; --月份/月初日期，即每月1日
    v_first_monthday_num numeric; --月份/月初日期，即每月1日
    v_last_month date; --上月月份，即上个月的1日
    v_last_month_last_trade_monthday date; --期初日期(上月月末交易日)
    v_last_trade_day date; --期末日期，期末交易日，离入参日期最近的交易日
    v_last_monthday date; --月末日期
    v_last_monthday_num numeric; --月末日期
    v_last_trade_monthday date; --月末交易日
    v_zbyysl numeric(28); 
    vn_yysl numeric(28); --待确认    
    v_step varchar;--步骤


  --4.逻辑主体×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××--
  begin
    --将传进来的char型的日期进行转换
    v_start_dt := coalesce(cast($1 as date),current_date-1);
    v_end_dt := coalesce(cast($2 as date),current_date);
    --给返回值赋值
    v_return_code := 0;

    raise notice '==============执行开始===============:%',clock_timestamp();
    select clock_timestamp() into v_run_start;

    ----step 0:开启循环，获取日期段内的每月第一天
    for rec in (select month_date trade_day
          from dwd.dim_calendar
           where cal_date >= v_start_dt
           and cal_date <= v_end_dt
           --and is_trade_day = 'Y'
           group by month_date
           order by trade_day)
      loop


    ----step1: 变量定义
    v_step:='step1';
    
    --月初日期
    select min(cal_date) 
      into v_first_monthday
    from dwd.dim_calendar t
     where month_date = rec.trade_day;

    --月末日期
    select max(cal_date)
    into v_last_monthday
    from dwd.dim_calendar t
     where month_date = v_first_monthday;
     
     --月初日期（数字型）
    select min(cal_num) 
      into v_first_monthday_num
    from dwd.dim_calendar t
     where month_date = rec.trade_day;

    --月末日期（数字型）
    select max(cal_num)
    into v_last_monthday_num
    from dwd.dim_calendar t
     where month_date = v_first_monthday;
     
     --月份 例202311
    select to_char(rec.trade_day, 'yyyymm')   into v_month;
     
     --取总部营业税率参数
      SELECT coalesce(MAX(SL), 0)
        INTO v_zbyysl
        FROM staging.cfjl_DSC_CFG_T_YYSLCS
       WHERE YYB = '1';
     
     --营业税率
    select coalesce(max(sl),0)
      into vn_yysl
        from staging.cfjl_dsc_cfg_t_yyslcs 
        where ksrq <= v_first_monthday_num
        and jsrq >=v_last_monthday_num;
    
    ----step2:删除临时表
    v_step:='step2';
    drop table if exists tempdata_20231109;
    drop table if exists tempdata_khgx_20231109;
    drop table if exists tempdata_khgx_20231110;
    drop table if exists tmp_prod_wind_fxrmbmidrate_20231109;
    drop table if exists temp_tjgmxls_yjlqd_20231115;
    drop table if exists temp_remuneration_preprocess_fund_trd_m_20231109;
        
    drop table if exists temp_tyybyjlqd_20231115;
    drop table if exists temp_remuneration_preprocess_fund_trd_m_pzyjl_20231115;
        

    ----step3:获取人员信息数据
    v_step:='step3';
    raise notice 'step3 creating tempdata_20231109';
     create local temp table tempdata_20231109 as
     (SELECT A.hr_id  as N1,
           A.join_date as N2,
           B.lzrq as N3,
           B.ryfl as N4,
           B.ryjb as N5,
           BM.team_id  as N6,
           TD.team_id  as N7,
           A.status as N8,
           A.emp_type  as N9,
           lpad(cast(B.yyb as VARCHAR),3,'0') as N10
      FROM staging.mg_cfjl_crmii_tryjbxx B 
   inner join (
             select eid as hr_id,joindate as join_date, leavedate as leave_date,status , 1  as emp_type
                 from dwd.pty_emp_raw 
                 where joindate  <= v_last_monthday
                   AND coalesce(leavedate , '20990101') >= v_first_monthday
           and ddid = 2
            union 
        select cast(team_id as bigint)* -1 as hr_id ,create_date as join_date,cancel_date as leave_date,status ,1 as emp_type  
        from dwd.acc_cfjl_team  
        where  create_date <= v_last_monthday
                  and coalesce(cancel_date, '20990101') >= v_first_monthday  
    ) A
      on A.hr_id = B.RYXX    
      LEFT JOIN (select t1.team_id ,t1.team_name, t2.cfjl_id from
            dwd.acc_cfjl_team t1 , dwd.acc_cfjl_team_member t2
            where t1.team_id = t2.team_id 
            and t1.team_type = 2
            AND T2.start_date <= v_last_monthday
            AND coalesce(T2.end_date , '20990101') >= v_last_monthday
            ) TD
        ON TD.cfjl_id = A.hr_id:: varchar 
      LEFT JOIN (select t1.team_id ,t1.team_name, t2.cfjl_id from
            dwd.acc_cfjl_team t1 , dwd.acc_cfjl_team_member t2
            where t1.team_id = t2.team_id 
            and t1.team_type = 1
            AND T2.start_date <= v_last_monthday
            AND coalesce(T2.end_date , '20990101') >= v_last_monthday
            ) BM
        ON BM.cfjl_id = A.hr_id:: varchar 
     WHERE  B.RZRQ <= v_last_monthday_num
       AND coalesce(B.LZRQ, '20990101') >= v_last_monthday_num)
     DISTRIBUTED by (N1);

    ----step4:获取客户关系
    v_step:='step4.1';
    raise notice 'step4.1 creating tempdata_khgx_20231109';
    create local temp table tempdata_khgx_20231109 as   
    (SELECT j.fund_acc_no  as KHH_XC,
           ZQLB as KHGX,
           0 as N2,
           K.XZ as N4,
           COUNT(J.fund_acc_no) as N5
      FROM dwd.acc_cfjl_srvrel  J,
           (SELECT A.ID, A.YYB, A.RY, A.KHH, A.XZ, A.RQ, B.DYZ, B.ZQLB
              FROM staging.cfjl_crmii_tkhdyxz A, staging.cfjl_crmii_tdyxzmb B
             WHERE A.RQ <= v_last_monthday_num
             ) K
     WHERE 
     J.start_date <= v_last_monthday
      AND coalesce(J.end_date, '20990101') >= v_first_monthday
      AND J.cfjl_id = K.RY
       AND J.fund_acc_no = K.KHH ::varchar
       AND J.rel_type IN (4, 10)
     GROUP BY ZQLB, DYZ, XZ, J.fund_acc_no) 
   DISTRIBUTED by  (KHH_XC);
    
    v_step:='step4.2';
    raise notice 'step %',v_step;
    insert into tempdata_khgx_20231109
    (KHH_XC, KHGX, N2, N4, N5)
    SELECT J.fund_acc_no,
           ZQLB,
           DYZ - CASE
             WHEN 1 = 0 THEN
              0.000001
             ELSE
              0
           END,
           K.XZ,
           COUNT(J.fund_acc_no)
      FROM dwd.acc_cfjl_srvrel J,
           (SELECT A.ID, A.YYB, A.RYLX, A.RY, A.XZ, A.RQ, B.DYZ, B.ZQLB
              FROM staging.cfjl_crmii_trydyxz A, staging.cfjl_crmii_tdyxzmb B
             WHERE A.RQ <= v_last_monthday_num) K
     WHERE J.start_date <= v_last_monthday
       AND coalesce(J.end_date, '20990101') >= v_first_monthday
       AND J.cfjl_id = K.RY
       AND J.rel_type IN (4, 10)
       AND NOT EXISTS
     (SELECT 1 FROM tempdata_khgx_20231109 T WHERE J.fund_acc_no = T.KHH_XC)
     GROUP BY ZQLB, DYZ, XZ, J.fund_acc_no;
   
   v_step:='step4.3';
   raise notice 'step %',v_step;
    insert into tempdata_khgx_20231109
    (KHH_XC, KHGX, N2, N4, N5)
   SELECT SJ.KHH_XC, ZQLB, DYZ, XZ, COUNT(SJ.KHH_XC)
      FROM (SELECT GX.fund_acc_no as KHH_XC,
                   ZQLB,
                   CASE
                     WHEN 1 = 0 THEN
                      DYZ - 0.000001
                     ELSE
                      DYZ
                   END DYZ,
                   K.XZ
              FROM tempdata_20231109 R,
                   dwd.acc_cfjl_srvrel GX,
                   (SELECT A.ID, A.YYB,A.RYLB, A.XZ, A.RQ, B.ZQLB, B.DYZ
                      FROM staging.cfjl_crmii_tyybdyxz A, staging.cfjl_crmii_tdyxzmb B
                     WHERE A.RQ <= v_last_monthday_num
                       AND A.XZ = 1) K
             WHERE K.YYB = 1
               AND GX.cfjl_id = R.N1
               AND GX.start_date <= v_last_monthday
               AND coalesce(GX.end_date, '20990101') >= v_first_monthday
               AND R.N4 = K.RYLB
               AND GX.rel_type IN (4, 10)               
               AND NOT EXISTS
             (SELECT 1 FROM tempdata_khgx_20231109 T WHERE GX.fund_acc_no = T.KHH_XC)) SJ,
           dwd.acc_cfjl_srvrel GX
     WHERE GX.fund_acc_no = SJ.KHH_XC
       AND GX.rel_type IN (4, 10)
       AND GX.start_date <= v_last_monthday
       AND coalesce(GX.end_date, '20990101') >= v_first_monthday
     GROUP BY ZQLB, DYZ, XZ, SJ.KHH_XC;
   
   v_step:='step4.4';
   raise notice 'step4.4 creating tempdata_khgx_20231110';
    create local temp table tempdata_khgx_20231110 as   
    (select KHH_XC, KHGX, N2, N4, N5
    from (
    select KHH_XC, KHGX, N2, N4, N5 ,
    row_number() over(partition by KHH_XC,KHGX order by N5) as rn
    from tempdata_khgx_20231109
    )t
    where t.rn = 1)
    DISTRIBUTED by (KHH_XC);
    
     --step 5: 获取汇率
    v_step := 'step5';
    raise notice 'step %',v_step;
    create local temp table tmp_prod_wind_fxrmbmidrate_20231109 as
  (select a.crncy_midrate,
           a.trade_date,
           case
               when crncy_code = 'HKD' then
                   '03'
               else
                   '02'
           end as currency_type
      from dwd.prod_wind_fxrmbmidrate a
     where a.crncy_code in ('HKD', 'USD')
       and a.trade_date between v_first_monthday and v_last_monthday)
     DISTRIBUTED by (currency_type);


    ----step6:交割明细流水表
    v_step:='step6.1';-- 普通
    raise notice 'step6.1 creating temp_tjgmxls_yjlqd_20231115';
    create local temp table temp_tjgmxls_yjlqd_20231115 as   
    (SELECT seqno,
           lsh,
           jgzllb,
           wth,
           khh,
           khxm,
           gdh,
           gdxm,
           jys,
           jslx,
           jsjg,
           jszh,
           bz,
           wtfs,
           yyb,
           xwdm,
           zqdm,
           zqmc,
           zqlb,
           jylb,
           --cjbh,
           cjrq,
           cjsj,
           sbsj,
           cjbs,
           cjsl,
           cjjg,
           jsj,
           lxjg,
           cjje,
           lxje,
           bzs1,
           jyj,
           s1,
           s2,
           s3,
           s4,
           s5,
           s6,
           ysje,
           s11,
           s12,
           s13,
           s15,
           s16,
           ysje_yj,
           bcye,
           zjmx_lsh,
           djje,
           yssl,
           bcsl,
           bcdjsl,
           djsl,
           bcyk,
           settle_date,
           rzrq,
           fsyyb,
           loginid,
           fhgy,
           zy,
           yys,
           null as zqpz,
           xybz,
           null as mmfx, --待确认
           null as is_jsyj,--待确认
           null as is_jsjyl,--待确认
           gt_jylb,
           gt_zqlb,
           CASE
             WHEN T.XYBZ = 0 THEN
              1
             WHEN T.XYBZ = 1 AND
                  T.JYLB NOT IN ('4080','2375', '2377','4082', '2378','4083', '2376','4081', '4102', '4103') THEN
              2
             WHEN T.XYBZ = 1 AND
                  T.JYLB IN ('4080','2375', '2377','4082', '2378','4083', '2376','4081', '4102', '4103') THEN
              3
           END AS yjlywlb
      FROM 
    (select seqno,                                                      --序号
         lsh,                                                        --流水号
         jgzllb,                                                     --交割资料类别 {字典：JGZLLB}
         wth,                                                        --委托合同号
         khh,                                                        --客户号
         khxm,                                                       --客户姓名
         gdh,                                                        --股东号
         gdxm,                                                       --股东姓名
         jys,                                                        --交易所
         jslx,                                                       --结算类型
         jsjg,                                                       --结算机构
         jszh,                                                       --结算账户
         bz,                                                         --结算币种
         wtfs,                                                       --委托方式 {字典：WTFS}
         yyb,                                                        --营业部
         xwdm,                                                       --席位代码
         coalesce(zqdm, ' ') as zqdm,                                --证券代码
         zqmc,                                                       --证券名称
         zqlb,                                                       --证券类别
         jylb,                                                       --交易类别
         cjbh,                                                       --成交编号
         cjrq,                                                       --成交日期
         cjsj,                                                       --成交时间
         sbsj,                                                       --申报时间
         cjbs,                                                       --成交笔数
         cjsl,                                                       --成交数量
         cjjg,                                                       --成交价格
         jsj,                                                        --结算价
         lxjg,                                                       --利息价格
         cjje,                                                       --成交金额
         lxje,                                                       --利息金额
         bzs1,                                                       --标准佣金
         s1,                                                         --实收佣金
         s2,                                                         --印花税
         s3,                                                         --过户费
         s4,                                                         --附加费
         s5,                                                         --结算费
         s6,                                                         --交易规费
         ysje,                                                       --实收(付)金额
         s11,                                                        --一级费用_经手费
         s12,                                                        --一级费用_证管费
         s13,                                                        --一级费用_过户费
         s15,                                                        --一级费用_结算费
         s16,                                                        --一级费用_风险基金
         ysje_yj,                                                    --一级实收付
         bcye,                                                       --本次资金余额
         zjmx_lsh,                                                   --资金明细流水号
         djje,                                                       --实际冻结(解冻)金额
         yssl,                                                       --实收(付)股份
         bcsl,                                                       --本次股份余额
         bcdjsl,                                                     --本次股份冻结余额
         djsl,                                                       --实际冻结(解冻)股份
         bcyk,                                                       --本次盈亏
         settle_date,                                                --交收日期
         rzrq,                                                       --入账日期
         fsyyb,                                                      --委托发生营业部
         loginid,                                                    --操作人登录ID
         fhgy,                                                       --复核柜员
         (coalesce(t.jyj, 0) - vn_yysl) --营业税率  需要先计算出     
         * coalesce(t.s1, 0) as jyj,                                 --净佣金
         vn_yysl * coalesce(t.s1, 0) yys, --营业税率  需要先计算出   --营业税
         zy,                                                         --摘要
         gt_jylb,                                                    --柜台_交易类别
         gt_zqlb,                                                    --柜台_证券类别
         gt_wtfs,                                                     --柜台_委托方式
         0 as xybz
   from (select a.serial_no as seqno,                                                         --序号
                 trim(a.fund_acc_no) || lpad(a.serial_no, 12, '9') as lsh,                     --流水号
                 '0' as jgzllb,                                                                --交割资料类别 {字典：JGZLLB}
                 coalesce(trim(b.contract_no), '0') as wth,                                    --委托合同号
                 trim(a.fund_acc_no) as khh,                                                   --客户号
                 trim(a.client_name) as khxm,                                                  --客户姓名
                 trim(a.holder_acc_no) as gdh,                                                 --股东号
                 null as gdxm,                                                                 --股东姓名
                 a.market_code as jys,                                                         --交易所
                 null as jslx,                                                                 --结算类型
                 trim(a.bank_code) as jsjg,                                                    --结算机构
                 trim(a.bank_acc_no) as jszh,                                                  --结算账户
                 lpad(trim(a.currency_type), 2, '0') as bz,                                    --结算币种
                 trim(a.entrust_method) as wtfs,                                               --委托方式 {字典：WTFS}
                 a.branch_code as yyb,                                                         --营业部
                 trim(a.seat_no) as xwdm,                                                      --席位代码
                 trim(a.sec_code) as zqdm,                                                     --证券代码
                 trim(a.sec_short_name) as zqmc,                                               --证券名称
                 a.sec_type as zqlb,                                                           --证券类别
                 trim(a.business_code) as jylb,                                                --交易类别
                 null as cjbh,                                                                 --成交编号
                 a.occur_date as cjrq,                                                         --成交日期
                 a.occur_time as cjsj,                                                         --成交时间
                 b.rpt_time as sbsj,                                                           --申报时间
                 coalesce(b.done_counts, '0') as cjbs,                                         --成交笔数
                 abs(a.sec_chg * coalesce(stk.tx_unit, 1)) as cjsl,                            --成交数量
                 coalesce(b.done_price, 0) as cjjg,                                            --成交价格
                 coalesce(b.done_price, 0) as jsj,                                             --结算价
                 0 as lxjg,                                                                    --利息价格
                 coalesce(a.done_amt, 0) as cjje,                                              --成交金额
                 coalesce(b.bond_interest, 0) as lxje,                                         --利息金额
                 coalesce(b.std_fee, 0) as bzs1,                                               --标准佣金
                 coalesce(b.commision, 0) as s1,                                               --实收佣金
                 coalesce(b.stamp_tax, 0) as s2, --印花税                                      --印花税
                 coalesce(b.chg_owner_fee, 0) as s3, --过户费                                  --过户费
                 0 as s4, --附加费                                                             --附加费
                 coalesce(b.handle_fee, 0) as s5, --经手费                                     --结算费
                 coalesce(b.frst_tx_fee, 0) as s6, --一级交易规费                              --交易规费
                 --a.fund_chg                   as ysje, --应收金额                            --实收(付)金额
                 coalesce(case                                                                 
                            when a.sec_in_out = '1' then                                       
                             -b.done_amt - b.real_fee                                          
                            else                                                               
                             b.done_amt - b.real_fee                                           
                          end,                                                                 
                          0) as ysje,                                                          
                 coalesce(b.handle_fee, 0) as s11, --一级费用_经手费                           --一级费用_经手费
                 coalesce(b.sec_admin_fee, 0) as s12, --一级费用_证管费                        --一级费用_证管费
                 coalesce(b.frst_chg_owner_fee, 0) as s13, --一级费用_过户费                   --一级费用_过户费
                 coalesce(b.frst_settlement_fe, 0) as s15, --一级费用_结算费                   --一级费用_结算费
                 0 as s16, --一级费用_风险基金                                                 --一级费用_风险基金
                 coalesce(b.frst_chg_owner_fee + b.frst_other_fee +                            
                          frst_fee_x + b.frst_settlement_fe +                                  
                          b.frst_stamp_tax + b.frst_tx_fee,                                    
                          0) as ysje_yj,                                                       --一级实收付
                 a.fund_bal as bcye, --本次资金余额                                            --本次资金余额
                 0 as zjmx_lsh,                                                                --资金明细流水号
                 0 as djje,                                                                    --实际冻结(解冻)金额
                 a.sec_chg as yssl,                                                            --实收(付)股份
                 a.sec_bal as bcsl, --本次证券数量余额                                         --本次股份余额
                 0 as bcdjsl,                                                                  --本次股份冻结余额
                 0 as djsl,                                                                    --实际冻结(解冻)股份
                 0 as bcyk,                                                                    --本次盈亏
                 deliver_date as settle_date,                                                  --交收日期
                 a.in_acc_date as rzrq,                                                        --入账日期
                 a.branch_code as fsyyb,                                                       --委托发生营业部
                 a.op_emp as loginid,                                                          --操作人登录ID
                 a.double_check_emp as fhgy,                                                   --复核柜员--复核柜员
                 --0 as jyj,  --不扣减过户费                                                   
                 coalesce(b.commision, 0) -                                                    
                 (coalesce(b.sec_admin_fee, 0) + coalesce(b.handle_fee, 0) /*+                 
                                                      coalesce(trim(b.other_fee),0)*/) as jyj, --净佣金
                 0 as yys, --修改                                                              --营业税
                 a.note as zy,                                                                 --摘要
                 trim(a.business_code) as gt_jylb,                                             --柜台_交易类别
                 trim(a.sec_type) as gt_zqlb,                                                  --柜台_证券类别
                 trim(a.entrust_method) as gt_wtfs                                             --柜台_委托方式
            from (select serial_no,
                         fund_acc_no,
                         client_name,
                         trim(holder_acc_no) as holder_acc_no,
                         market_code,
                         bank_code,
                         
                         currency_type,
                         branch_code,
                         sec_code,
                         sec_type,
                         trim(seat_no) as seat_no,
                         occur_date,
                         occur_time,
                         fund_chg,
                         fund_bal,
                         sec_chg,
                         sec_bal,
                         op_emp,
                         double_check_emp,
                         business_code,
                         entrust_method,
                         sec_short_name,
                         to_date(trim(in_acc_date), 'yyyymmdd') as in_acc_date,
                         done_amt,
                         note,
                         change_type,
                         trim(intend_in_acc_date) as intend_in_acc_date,
                         deliver_date as deliver_date,
                         bank_acc_no,
                         sec_in_out
                    from dwd.ast_nor_acc_his_fund_stock_chg
                   where change_type
                   in ('50','51','52')
                     and market_code not in ('8', 'A')
                     and not ( --排除待交收转为交收的部分
                           market_code in ('3', '4', '6') and
                           business_code in ('4001', '4002'))
                     and sec_type is not null 
             and  occur_date  between v_first_monthday and v_last_monthday
                  union all
                  select serial_no,
                         fund_acc_no,
                         client_name,
                         trim(holder_acc_no) as holder_acc_no,
                         market_code,
                         bank_code,
                         
                         currency_type,
                         branch_code,
                         sec_code,
                         sec_type,
                         trim(seat_no) as seat_no,
                         occur_date,
                         occur_time,
                         fund_chg,
                         fund_bal,
                         sec_chg,
                         sec_bal,
                         op_emp,
                         double_check_emp,
                         business_code,
                         entrust_method,
                         sec_short_name,
                         in_acc_date,
                         done_amt,
                         note,
                         change_type,
                         intend_in_acc_date,
                         deliver_date :: varchar,
                         bank_acc_no,
                         sec_in_out
                    from dwd.ast_nor_acc_undlvr_fnd_stk_chg --未交收的，例如b股等等。
                   where occur_date  between v_first_monthday and v_last_monthday) a
            left join dwd.prod_b_sec_code stk
              on stk.sec_code = a.sec_code
             and stk.market_code = a.market_code
            left join dwd.trade_jzjy_ks_his_done b
              on b.branch_code = a.branch_code
             and b.fund_acc_no = a.fund_acc_no
             and b.serial_no = a.serial_no
             and b.done_date = a.occur_date
           where a.occur_date  between v_first_monthday and v_last_monthday) t
      ) T)DISTRIBUTED by (khh);     
      

    v_step:='step6.2'; --港股
raise notice 'step %',v_step;
insert into temp_tjgmxls_yjlqd_20231115
(
seqno,
           lsh,
           jgzllb,
           wth,
           khh,
           khxm,
           gdh,
           gdxm,
           jys,
           jslx,
           jsjg,
           jszh,
           bz,
           wtfs,
           yyb,
           xwdm,
           zqdm,
           zqmc,
           zqlb,
           jylb,
           --cjbh,
           cjrq,
           cjsj,
           sbsj,
           cjbs,
           cjsl,
           cjjg,
           jsj,
           lxjg,
           cjje,
           lxje,
           bzs1,
           jyj,
           s1,
           s2,
           s3,
           s4,
           s5,
           s6,
           ysje,
           s11,
           s12,
           s13,
           s15,
           s16,
           ysje_yj,
           bcye,
           zjmx_lsh,
           djje,
           yssl,
           bcsl,
           bcdjsl,
           djsl,
           bcyk,
           settle_date,
           rzrq,
           fsyyb,
           loginid,
           fhgy,
           zy,
           yys,
           zqpz,
           xybz,
            mmfx, --待确认
           is_jsyj,--待确认
           is_jsjyl,--待确认
           gt_jylb,
           gt_zqlb,
           yjlywlb
)   
SELECT seqno,
           lsh,
           jgzllb,
           wth,
           khh,
           khxm,
           gdh,
           gdxm,
           jys,
           jslx,
           jsjg,
           jszh,
           bz,
           wtfs,
           yyb,
           xwdm,
           zqdm,
           zqmc,
           zqlb,
           jylb,
           --cjbh,
           cjrq,
           cjsj,
           sbsj,
           cjbs,
           cjsl,
           cjjg,
           jsj,
           lxjg,
           cjje,
           lxje,
           bzs1,
           jyj,
           s1,
           s2,
           s3,
           s4,
           s5,
           s6,
           ysje,
           s11,
           s12,
           s13,
           s15,
           s16,
           ysje_yj,
           bcye,
           zjmx_lsh,
           djje,
           yssl,
           bcsl,
           bcdjsl,
           djsl,
           bcyk,
           settle_date,
           rzrq,
           fsyyb,
           loginid,
           fhgy,
           zy,
           yys,
           null as zqpz,
           xybz,
           null as mmfx, --待确认
           null as is_jsyj,--待确认
           null as is_jsjyl,--待确认
           gt_jylb,
           gt_zqlb,
           CASE
             WHEN T.XYBZ = 0 THEN
              1
             WHEN T.XYBZ = 1 AND
                  T.JYLB NOT IN ('4080','2375', '2377','4082', '2378','4083', '2376','4081', '4102', '4103') THEN
              2
             WHEN T.XYBZ = 1 AND
                  T.JYLB IN ('4080','2375', '2377','4082', '2378','4083', '2376','4081', '4102', '4103') THEN
              3
           END AS yjlywlb
      FROM 
    (
      select seqno,                                                                     --序号
         lsh,                                                                       --流水号
         jgzllb,                                                                    --交割资料类别 {字典：JGZLLB}
         wth,                                                                       --委托合同号
         khh,                                                                       --客户号
         khxm,                                                                      --客户姓名
         gdh,                                                                       --股东号
         gdxm,                                                                      --股东姓名
         jys,                                                                       --交易所
         jslx,                                                                      --结算类型
         jsjg,                                                                      --结算机构
         jszh,                                                                      --结算账户
         bz,                                                                        --结算币种
         wtfs,                                                                      --委托方式 {字典：WTFS}
         yyb,                                                                       --营业部
         xwdm,                                                                      --席位代码
         coalesce(zqdm, ' ') as zqdm,                                               --证券代码
         zqmc,                                                                      --证券名称
         zqlb,                                                                      --证券类别
         jylb,                                                                      --交易类别
         cjbh,                                                                      --成交编号
         cjrq,                                                                      --成交日期
         cjsj,                                                                      --成交时间
         sbsj,                                                                      --申报时间
         cjbs,                                                                      --成交笔数
         cjsl,                                                                      --成交数量
         cjjg,                                                                      --成交价格
         jsj,                                                                       --结算价
         lxjg,                                                                      --利息价格
         cjje,                                                                      --成交金额
         lxje,                                                                      --利息金额
         bzs1,                                                                      --标准佣金
         s1,                                                                        --实收佣金
         s2,                                                                        --印花税
         s3,                                                                        --过户费
         s4,                                                                        --附加费
         s5,                                                                        --结算费
         s6,                                                                        --交易规费
         ysje,                                                                      --实收(付)金额
         s11,                                                                       --一级费用_经手费
         s12,                                                                       --一级费用_证管费
         s13,                                                                       --一级费用_过户费
         s15,                                                                       --一级费用_结算费
         s16,                                                                       --一级费用_风险基金
         ysje_yj,                                                                   --一级实收付
         bcye,                                                                      --本次资金余额
         zjmx_lsh,                                                                  --资金明细流水号
         djje,                                                                      --实际冻结(解冻)金额
         yssl,                                                                      --实收(付)股份
         bcsl,                                                                      --本次股份余额
         bcdjsl,                                                                    --本次股份冻结余额
         djsl,                                                                      --实际冻结(解冻)股份
         bcyk,                                                                      --本次盈亏
         settle_date,                                                               --交收日期
         rzrq,                                                                      --入账日期
         fsyyb,                                                                     --委托发生营业部
         loginid,                                                                   --操作人登录ID
         fhgy,                                                                      --复核柜员
         (coalesce(t.jyj, 0) - vn_yysl) --营业税率  需要先计算出                    
         * coalesce(t.s1, 0) as jyj, --净佣金                                       --净佣金
         vn_yysl * coalesce(t.s1, 0) yys, --营业税率  需要先计算出   --营业税       --营业税
         zy,                                                                        --摘要
         gt_jylb,                                                                   --柜台_交易类别
         gt_zqlb,                                                                   --柜台_证券类别
         gt_wtfs,                                                                    --柜台_委托方式
     0 as xybz
    from (select a.serial_no as seqno,                                                                         --序号
                 trim(a.fund_acc_no) || lpad(a.serial_no, 12, '9') as lsh,                                     --流水号
                 '0' as jgzllb,                                                                                --交割资料类别 {字典：JGZLLB}
                 coalesce(trim(b.contract_no), '0') as wth,                                                    --委托合同号
                 trim(a.fund_acc_no) as khh,                                                                   --客户号
                 trim(a.client_name) as khxm,                                                                  --客户姓名
                 trim(a.holder_acc_no) as gdh,                                                                 --股东号
                 null as gdxm,                                                                                 --股东姓名
                 a.market_code as jys,                                                                         --交易所
                 null as jslx,                                                                                 --结算类型
                 trim(a.bank_code) as jsjg,                                                                    --结算机构
                 trim(a.fund_acc_no) as jszh,                                                                  --结算账户
                 trim(a.currency_type) as bz,                                                                  --结算币种
                 trim(a.entrust_method) as wtfs,                                                               --委托方式 {字典：WTFS}
                 a.branch_code as yyb,                                                                         --营业部
                 trim(a.seat_no) as xwdm,                                                                      --席位代码
                 trim(a.sec_code) as zqdm,                                                                     --证券代码
                 trim(a.sec_short_name) as zqmc,                                                               --证券名称
                 a.sec_type as zqlb,                                                                           --证券类别
                 trim(a.business_code) as jylb,                                                                --交易类别
                 null as cjbh,                                                                                 --成交编号
                 a.occur_date as cjrq,                                                                         --成交日期
                 a.occur_time as cjsj,                                                                         --成交时间
                 b.rpt_time as sbsj,                                                                           --申报时间
                 coalesce(b.done_counts, 0) as cjbs,                                                           --成交笔数
                 abs(a.sec_chg * coalesce(stk.tx_unit, 1)) as cjsl,                                            --成交数量
                 coalesce(b.done_price, 0) as cjjg, --cjjg保留港币                                             --成交价格
                 coalesce(b.done_price, 0) as jsj,                                                             --结算价
                 0 as lxjg,                                                                                    --利息价格
                 coalesce(a.done_amt * coalesce(b.exchange_rate, 1), 0) as cjje, -- cjje=需要兑换为rmb         --成交金额
                 coalesce(b.bond_interest, 0) as lxje,                                                         --利息金额
                 coalesce(b.std_fee, 0) as bzs1,                                                               --标准佣金
                 coalesce(b.commision, 0) as s1,                                                               --实收佣金
                 coalesce(b.stamp_tax, 0) as s2, --印花税                                                      --印花税
                 coalesce(b.chg_owner_fee, 0) as s3, --过户费                                                  --过户费
                 0 as s4, --附加费                                                                             --附加费
                 coalesce(b.handle_fee, 0) as s5, --经手费                                                     --结算费
                 coalesce(b.frst_tx_fee, 0) as s6, --一级交易规费                                              --交易规费
                 coalesce(case                                                                                 --实收(付)金额
                            when a.sec_in_out = '1' then                                                       
                             -b.fcy_done_amt - b.real_fee                                                      
                            else                                                                               
                             b.fcy_done_amt - b.real_fee                                                       
                          end,                                                                                 
                          0) as ysje,                                                                          
                 coalesce(b.handle_fee, 0) as s11, --一级费用_经手费                                           
                 coalesce(b.sec_admin_fee, 0) as s12, --一级费用_证管费                                        --一级费用_经手费
                 coalesce(b.frst_chg_owner_fee, 0) as s13, --一级费用_过户费                                   --一级费用_证管费
                 coalesce(b.frst_settlement_fe, 0) as s15, --一级费用_结算费                                   --一级费用_过户费
                 0 as s16, --一级费用_风险基金                                                                 --一级费用_结算费
                 coalesce(b.frst_chg_owner_fee + b.frst_other_fee +                                            --一级费用_风险基金
                          frst_fee_x + b.frst_settlement_fe +                                                  
                          b.frst_stamp_tax + b.frst_tx_fee,                                                    
                          0) as ysje_yj,                                                                       
                 a.fund_bal as bcye, --本次资金余额                                                            --一级实收付
                 0 as zjmx_lsh,                                                                                --本次资金余额
                 0 as djje,                                                                                    --资金明细流水号
                 a.sec_chg as yssl,                                                                            --实际冻结(解冻)金额
                 a.sec_bal as bcsl, --本次证券数量余额                                                         --实收(付)股份
                 0 as bcdjsl,                                                                                  --本次股份余额
                 0 as djsl,                                                                                    --本次股份冻结余额
                 0 as bcyk,                                                                                    --实际冻结(解冻)股份
                 deliver_date as settle_date,                                                                  --本次盈亏
                a.in_acc_date as rzrq,                                                   --交收日期
                 a.branch_code as fsyyb,                                                                       --入账日期
                 a.op_emp as loginid,                                                                          --委托发生营业部
                 a.double_check_emp as fhgy,                                                                   --操作人登录ID
                 --0 as jyj,  --不扣减过户费                                                                   --复核柜员--复核柜员
                 coalesce(b.commision, 0) -                                                                    
                 (coalesce(b.sec_admin_fee, 0) + coalesce(b.handle_fee, 0) /*+                                 
                                                   coalesce(trim(b.other_fee),0)*/) as jyj,                    --净佣金
                 0 as yys, --修改                                                                              --营业税
                 a.note as zy,                                                                                 --摘要
                 trim(a.business_code) as gt_jylb,                                                             --柜台_交易类别
                 trim(a.sec_type) as gt_zqlb,                                                                  --柜台_证券类别
                 trim(a.entrust_method) as gt_wtfs                                                             --柜台_委托方式
            from (select serial_no,                                                                            
                         fund_acc_no,
                         client_name,
                         trim(holder_acc_no) as holder_acc_no,
                         market_code,
                         bank_code,
                         
                         currency_type,
                         branch_code,
                         sec_code,
                         sec_type,
                         trim(seat_no) as seat_no,
                         occur_date,
                         occur_time,
                         fund_chg,
                         fund_bal,
                         sec_chg,
                         sec_bal,
                         op_emp,
                         double_check_emp,
                         business_code,
                         entrust_method,
                         sec_short_name,
                         to_date(trim(in_acc_date), 'yyyymmdd') as in_acc_date,
                         done_amt,
                         a.note,
                         change_type,
                         trim(intend_in_acc_date) as intend_in_acc_date,
                         deliver_date,
                         sec_in_out
                    from dwd.ast_nor_acc_his_fund_stock_chg a
                   where market_code in ('8', 'A') --港股通单独处理
                  ) a
            left join dwd.prod_b_sec_code stk
              on stk.sec_code = a.sec_code
             and stk.market_code = a.market_code
            left join dwd.trade_nor_acc_his_done_intl b
              on b.branch_code = a.branch_code
             and b.fund_acc_no = a.fund_acc_no
             and b.serial_no = a.serial_no
             and b.done_date = a.occur_date
           where a.occur_date  between v_first_monthday and v_last_monthday) t
    )T
    where jylb  in ('6100',
                        '6101',
                        '6104',
                        '6105',
                        '6107',
                        '6110',
                        '6111',
                        '6113',
                        '6120',
                        '6121',
                        '6123');    
    
  v_step:='step6.3';--信用
raise notice 'step %',v_step;
insert into temp_tjgmxls_yjlqd_20231115
(
seqno,
           lsh,
           jgzllb,
           wth,
           khh,
           khxm,
           gdh,
           gdxm,
           jys,
           jslx,
           jsjg,
           jszh,
           bz,
           wtfs,
           yyb,
           xwdm,
           zqdm,
           zqmc,
           zqlb,
           jylb,
           --cjbh,
           cjrq,
           cjsj,
           sbsj,
           cjbs,
           cjsl,
           cjjg,
           jsj,
           lxjg,
           cjje,
           lxje,
           bzs1,
           jyj,
           s1,
           s2,
           s3,
           s4,
           s5,
           s6,
           ysje,
           s11,
           s12,
           s13,
           s15,
           s16,
           ysje_yj,
           bcye,
           zjmx_lsh,
           djje,
           yssl,
           bcsl,
           bcdjsl,
           djsl,
           bcyk,
           settle_date,
           rzrq,
           fsyyb,
           loginid,
           fhgy,
           zy,
           yys,
           zqpz,
           xybz,
            mmfx, --待确认
           is_jsyj,--待确认
           is_jsjyl,--待确认
           gt_jylb,
           gt_zqlb,
           yjlywlb
)   
SELECT seqno,
           lsh,
           jgzllb,
           wth,
           khh,
           khxm,
           gdh,
           gdxm,
           jys,
           jslx,
           jsjg,
           jszh,
           bz,
           wtfs,
           yyb,
           xwdm,
           zqdm,
           zqmc,
           zqlb,
           jylb,
           --cjbh,
           cjrq,
           cjsj,
           sbsj,
           cjbs,
           cjsl,
           cjjg,
           jsj,
           lxjg,
           cjje,
           lxje,
           bzs1,
           jyj,
           s1,
           s2,
           s3,
           s4,
           s5,
           s6,
           ysje,
           s11,
           s12,
           s13,
           s15,
           s16,
           ysje_yj,
           bcye,
           zjmx_lsh,
           djje,
           yssl,
           bcsl,
           bcdjsl,
           djsl,
           bcyk,
           settle_date,
           rzrq,
           fsyyb,
           loginid,
           fhgy,
           zy,
           yys,
           null as zqpz,
           xybz,
           null as mmfx, --待确认
           null as is_jsyj,--待确认
           null as is_jsjyl,--待确认
           gt_jylb,
           gt_zqlb,
           CASE
             WHEN T.XYBZ = 0 THEN
              1
             WHEN T.XYBZ = 1 AND
                  T.JYLB NOT IN ('4080','2375', '2377','4082', '2378','4083', '2376','4081', '4102', '4103') THEN
              2
             WHEN T.XYBZ = 1 AND
                  T.JYLB IN ('4080','2375', '2377','4082', '2378','4083', '2376','4081', '4102', '4103') THEN
              3
           END AS yjlywlb
      FROM 
    ( select seqno,                                                              --序号
            lsh,                                                                --流水号
            jgzllb,                                                             --交割资料类别
            wth,                                                                --委托合同号
            khh,                                                                --客户号
            khxm,                                                               --客户姓名
            gdh,                                                                --股东号
            gdxm,                                                               --股东姓名
            jys,                                                                --交易所
            jslx,                                                               --结算类型
            jsjg,                                                               --结算机构
            jszh,                                                               --结算账户
            bz,                                                                 --结算币种
            wtfs,                                                               --委托方式 {字典：WTFS}
            yyb,                                                                --营业部
            xwdm,                                                               --席位代码
            coalesce(zqdm, ' ') as zqdm,                                        --证券代码
            zqmc,                                                               --证券名称
            zqlb,                                                               --证券类别
            jylb,                                                               --交易类别
            cjbh,                                                               --成交编号
            cjrq,                                                               --成交日期
            cjsj,                                                               --成交时间
            sbsj,                                                               --申报时间
            cjbs,                                                               --成交笔数
            cjsl,                                                               --成交数量
            cjjg,                                                               --成交价格
            jsj,                                                                --结算价
            lxjg,                                                               --利息价格
            cjje,                                                               --成交金额
            lxje,                                                               --利息金额
            bzs1,                                                               --标准佣金
            s1,                                                                 --实收佣金
            s2,                                                                 --印花税
            s3,                                                                 --过户费
            s4,                                                                 --附加费
            s5,                                                                 --结算费
            s6,                                                                 --交易规费
            ysje,                                                               --实收(付)金额
            s11,                                                                --一级费用_经手费
            s12,                                                                --一级费用_证管费
            s13,                                                                --一级费用_过户费
            s15,                                                                --一级费用_结算费
            s16,                                                                --一级费用_风险基金
            ysje_yj,                                                            --一级实收付
            bcye,                                                               --本次资金余额
            zjmx_lsh,                                                           --资金明细流水号
            djje,                                                               --实际冻结(解冻)金额
            yssl,                                                               --实收(付)股份
            bcsl,                                                               --本次股份余额
            bcdjsl,                                                             --本次股份冻结余额
            djsl,                                                               --实际冻结(解冻)股份
            bcyk,                                                               --本次盈亏
            settle_date,                                                        --交收日期
            rzrq,                                                               --入账日期
            fsyyb,                                                              --委托发生营业部
            loginid,                                                            --操作人登录ID
            fhgy,                                                               --复核柜员
            coalesce(t.jyj, 0) -                                                
            coalesce((select sl from staging.cfjl_dsc_cfg_t_yyslcs y where y.yyb = t.yyb),   
                     vn_yysl) * coalesce(t.s1, 0) as jyj, --vn_yysl需要修改     --净佣金
            coalesce((select sl from staging.cfjl_dsc_cfg_t_yyslcs y where y.yyb = t.yyb),   
                     vn_yysl) * coalesce(t.s1, 0) yys, --vn_yysl需要修改        --营业税
            zy,                                                                 --摘要
            gt_jylb,                                                            --柜台_交易类别
            gt_zqlb,                                                            --柜台_证券类别
            gt_wtfs,                                                             --柜台_委托方式
      1 as xybz
       from (select a.serial_no as seqno,                                                --序号
                    a.serial_no as lsh,                                                  --流水号
                    '0' as jgzllb,                                                       --交割资料类别
                    coalesce(trim(f.contract_no), '0') as wth,                           --委托合同号
                    coalesce(trim(p.fund_acc_no), trim(a.fund_acc_no)) as khh,        --客户号
                    trim(a.fund_acc_no) as khxm, --需要修改                              --客户姓名
                    trim(a.holder_acc_no) as gdh,                              --股东号
                    --trim(a.cust_name) as gdxm,                                           
          null as gdxm,
          --股东姓名
                    a.market_code as jys,                                                --交易所
                    null as jslx,                                                        --结算类型
                    trim(a.bank_code) as jsjg,                                           --结算机构
                    (a.fund_acc_no) as jszh,                                             --结算账户
                    a.currency_type as bz,                                               --结算币种
                    a.entrust_method as wtfs,                                            --委托方式 {字典：WTFS}
                    coalesce(trim(p.branch_code), trim(a.branch_code)) as yyb,    --营业部
                    trim(a.seat_no) as xwdm,                                             --席位代码
                    trim(a.sec_code) as zqdm,                                            --证券代码
                    trim(a.sec_short_name) as zqmc,                                      --证券名称
                    a.sec_type as zqlb,                                                  --证券类别
                    trim(a.business_code) as jylb,                                       --交易类别
                    f.done_no as cjbh,                                                   --成交编号
                    a.occur_date as cjrq,                                                --成交日期
                    a.occur_time as cjsj,                                                --成交时间
                    f.rpt_time as sbsj,                                                  --申报时间
                    coalesce(f.done_counts, 0) as cjbs,                                  --成交笔数
                    coalesce(abs(f.done_vol * sec.tx_unit), 0) as cjsl,                  --成交数量
                    coalesce(f.done_price, 0) as cjjg,                                   --成交价格
                    coalesce(f.settle_price, 0) as jsj,                                  --结算价
                    0 as lxjg,                                                           --利息价格
                    abs(a.done_amt) as cjje,                                             --成交金额
                    coalesce(f.bond_interest, 0) as lxje,                                --利息金额
                    coalesce(f.std_fee, 0) as bzs1,                                      --标准佣金
                    coalesce(f.commision, 0) as s1,                                      --实收佣金
                    coalesce(f.stamp_tax, 0) as s2, --印花税                             --印花税
                    coalesce(f.chg_owner_fee, 0) as s3, --过户费                         --过户费
                    coalesce(f.other_fee, 0) as s4, --附加费                             --附加费
                    coalesce(f.handle_fee, 0) as s5, --结算费                            --结算费
                    coalesce(f.frst_tx_fee, 0) as s6, --交易规费                         --交易规费
                    coalesce(case                                                        
                               when a.sec_in_out = '1' then                              
                                -f.done_amt - f.real_fee                                 
                               else                                                      
                                f.done_amt - f.real_fee                                  
                             end,                                                        
                             0) as ysje,                                                 --实收(付)金额
                    coalesce(f.handle_fee, 0) as s11, --一级费用_经手费                  --一级费用_经手费
                    coalesce(f.sec_admin_fee, 0) as s12, --一级费用_证管费               --一级费用_证管费
                    coalesce(f.frst_chg_owner_fee, 0) as s13, --一级费用_过户费          --一级费用_过户费
                    coalesce(f.frst_settlement_fe, 0) as s15, --一级费用_结算费          --一级费用_结算费
                    0 as s16, --一级费用_风险基金                                        --一级费用_风险基金
                    coalesce(f.frst_chg_owner_fee + f.frst_fee_x +                       
                             f.frst_settlement_fe + f.frst_stamp_tax +                   
                             f.frst_tx_fee,                                              
                             0) as ysje_yj, --一级应收金额                               --一级实收付
                    coalesce(f.fund_bal, 0) as bcye,                                     --本次资金余额
                    0 as zjmx_lsh,                                                       --资金明细流水号
                    0 as djje,                                                           --实际冻结(解冻)金额
                    a.sec_chg as yssl,                                                   --实收(付)股份
                    a.sec_bal as bcsl,                                                   --本次股份余额
                    0 as bcdjsl,                                                         --本次股份冻结余额
                    0 as djsl,                                                           --实际冻结(解冻)股份
                    0 as bcyk,                                                           --本次盈亏
                    a.deliver_date as settle_date,                                       --交收日期
                    null as rzrq,                                                        --入账日期
                    a.occur_branch as fsyyb,                                             --委托发生营业部
                    a.op_emp as loginid,                                                 --操作人登录ID
                    a.double_check_emp as fhgy,                                          --复核柜员
                    coalesce(f.commision, 0) -                                           
                    (coalesce(f.sec_admin_fee, 0) +                                      
                     coalesce(f.handle_fee, 0)) as jyj,                                  
                    0 as yys, --营业税                                                   --营业税
                    a.note as zy,                                                        --摘要
                    a.business_code as gt_jylb,                                          --柜台_交易类别
                    a.sec_type as gt_zqlb,                                               --柜台_证券类别
                    a.entrust_method as gt_wtfs                                          --柜台_委托方式
               from dwd.ast_rzrq_ks_his_fund_stock_chg a
               left join staging.rzrq_ks_b_sec_code sec
                 on sec.sec_code = a.sec_code
                and sec.market_code = a.market_code
               left join dwd.trade_rzrq_ks_his_done f
                 on f.serial_no = a.serial_no
                and f.occur_date = a.occur_date
                and f.branch_code = a.branch_code
                and f.fund_acc_no = a.fund_acc_no
               left join dwd.acc_cfjl_crd_info p
                 on trim(p.credit_fund_acc_no) = trim(a.fund_acc_no) 
                --and trim(p.credit_holder_acc) = trim(a.holder_acc_no)
              where a.change_type in ('50','51','52')
                and a.occur_date between v_first_monthday and v_last_monthday) t
      
    )T; 

    ----step7:营业部佣金率起点表
    v_step:='step7.1';
    create local temp table temp_tyybyjlqd_20231115 as    
    --create table temp_tyybyjlqd_20231115 as 
    --营业部策略
      (SELECT
             P.YYB,
             P.RYLB,
             P.YWLB,
             P.KSYF,
             P.JSYF,
             P.YJLQD,
             case
               when p.ywlb in (1, 4) then
                0
               else
                1
             end as xybz
   from(
   select B.branch_code as YYB, 
            PZ.RYLB,
            PZ.YWLB,
            PZ.KSYF,
            PZ.JSYF,
            PZ.YJLQD                     
       FROM staging.cfjl_CRMII_TYJLQDPZ PZ
       inner join  staging.mg_cfjl_CRMII_LBORGANIZATION A
          on A.ID = PZ.yyb
       inner join dwd.dim_org_branch B
          on lpad(A.orgcode,3,'0') = b.mainacc_branch_code  
        and B.source_sys = 'jzjy' and B.mainacc_orgcode is not null   
      WHERE PZ.KSYF <= v_month::numeric
        AND (PZ.JSYF >= v_month::numeric OR PZ.JSYF IS NULL)
    )P)
    DISTRIBUTED by (YYB);
    
    v_step:='step7.2';  --分公司特殊策略
    --insert into  temp_tyybyjlqd_20231115 
    raise notice 'step %',v_step;
    insert into temp_tyybyjlqd_20231115
          (YYB,
             RYLB,
             YWLB,
             KSYF,
             JSYF,
             YJLQD,
             xybz)

       select B.branch_code, 
              PZ.RYLB,
              PZ.YWLB,
              PZ.KSYF,
              PZ.JSYF,
              PZ.YJLQD,
              case
               when PZ.ywlb in (1, 4) then
                0
               else
                1
             end as xybz        
         FROM staging.cfjl_CRMII_TYJLQDPZ PZ
         inner join  staging.mg_cfjl_CRMII_LBORGANIZATION A
            on A.ID = PZ.yyb
         inner join dwd.dim_org_branch B
            on A.orgcode = b.mainacc_orgcode  
          and B.source_sys = 'jzjy' 
          and B.mainacc_orgcode is not null 
          and B.branch_code  not in(select distinct YYB from temp_tyybyjlqd_20231115) 
        WHERE PZ.KSYF <= v_month::numeric
          AND (PZ.JSYF >= v_month::numeric OR PZ.JSYF IS NULL);

    v_step:='step7.3';  --总部策略  
    --insert into  temp_tyybyjlqd_20231115 
    raise notice 'step %',v_step;
    insert into temp_tyybyjlqd_20231115
          (YYB,
             RYLB,
             YWLB,
             KSYF,
             JSYF,
             YJLQD,
             xybz)
           
      select a.branch_code ,
             PZ.RYLB,
             PZ.YWLB,
             PZ.KSYF,
             PZ.JSYF,
             PZ.YJLQD,
              case
               when PZ.ywlb in (1, 4) then
                0
               else
                1
             end as xybz
      from dwd.dim_org_branch a
      full join staging.cfjl_CRMII_TYJLQDPZ PZ
             on PZ.yyb = 1
            and PZ.KSYF <= v_month::numeric
            AND (PZ.JSYF >= v_month::numeric OR PZ.JSYF IS NULL)
      where a.source_sys = 'jzjy' 
      and a.mainacc_orgcode is not null
        and a.branch_code not in (select distinct YYB from temp_tyybyjlqd_20231115);  
    
    
    ----step8:插入结果表
    v_step:='step8';
    raise notice 'step %',v_step;
create local temp table temp_remuneration_preprocess_fund_trd_m_20231109 as 
--create table temp.dws_remuneration_preprocess_fund_trd_m_combine as
  (select s.jjr  as cfjl_id,
         s.jszh_id as settle_account,
         s.khid as cust_id,
         s.khgx as evaluation_rel,
         s.gxid as rel_id,
         v_month as occur_month,
         s.khh as fund_acc_no,
         s.jys as market_code,
         s.yyb_jszh as branch_code,
         s.orgid as orgnation_id,
         s.bz as currency_type,
         s.zqlb as fund_type,
         s.jylb as trade_type,
         sum(s.cjsl * s.xs) as done_vol,
         sum(s.cjje * s.xs) as done_balance,
         sum(s.bzs1 * s.xs) as standard_comm,
         sum(s.s1 * s.xs) as commission,
         sum(s.cjbs * s.xs) as done_amount,
         sum(case
               when s.jys not in ('8', 'A') then
                (s.S11 + s.S12) * s.xs
               else
                0
             end) as market_fee,
         s.wtfs as entrust_method,
         sum(case
               when s.xybz = 1 and s.cjrq = to_date('20151230','yyyymmdd') then
                0
               when s.xs = 1 then
                (s.s1) * coalesce(a.sl, v_zbyysl)
               else
                0
             end) as business_tax,
         sum(case
               when ((s.bz <> '02' and s1 = 5) or (s.bz = '02' and s1 = 1)) and
                    s1 / cjje > 0.003 and s.xs = 1 then
                cjje
               else
                0
             end) done_amount_bd ,
         sum(case
               when ((s.bz <> '02' and s1 = 5) or (s.bz = '02' and s1 = 1)) and
                    s1 / cjje > 0.003 and s.xs = 1 then
                bzs1
               else
                0
             end) standard_comm_bd,
         sum(case
               when ((s.bz <> '02' and s1 = 5) or (s.bz = '02' and s1 = 1)) and
                    s1 / cjje > 0.003 and s.xs = 1 then
                s1
               else
                0
             end) commission_bd,
         sum(case
               when ((s.bz <> '02' and s1 = 5) or (s.bz = '02' and s1 = 1)) and
                    s1 / cjje > 0.003 and s.xs = 1 then
                (s.S11 + s.S12)
               else
                0
             end) market_fee_bd,
         sum(case
               when s.xybz = 1 and s.cjrq = to_date('20151230','yyyymmdd') then
                0
               when ((s.bz <> '02' and s1 = 5) or (s.bz = '02' and s1 = 1)) and
                    s1 / cjje > 0.003 and s.xs = 1 and s.s1 > (s.S11 + s.S12) then
                (s.s1) * coalesce(a.sl, v_zbyysl)
               else
                0
             end) business_tax_bd,
         sum(case
               WHEN gx.khh_xc is not null and gx.n4 = 1 and cjje > 0 And s1 > 0 and
                    round(s1 / cjje, 6) <= gx.n2 and s.xs = 1 then
                cjje              
               else
                0
             end) as done_balance_zd,
         sum(case
               WHEN gx.khh_xc is not null and gx.n4 = 1 and cjje > 0 And s1 > 0 and
                    round(s1 / cjje, 6) <= gx.n2 and s.xs = 1 then
                bzs1
               
               else
                0
             end) as standard_zd,
         sum(case
               WHEN gx.khh_xc is not null and gx.n4 = 1 and cjje > 0 And s1 > 0 and
                    round(s1 / cjje, 6) <= gx.n2 and s.xs = 1 then
                s1
               
               else
                0
             end) as commission_zd,
         sum(case
               WHEN gx.khh_xc is not null and gx.n4 = 1 and cjje > 0 And s1 > 0 and
                    round(s1 / cjje, 6) <= gx.n2 and s.xs = 1 then
                (s.S11 + s.S12)
               
               else
                0
             end) as market_fee_zd,
         sum(case
               when s.xybz = 1 and s.cjrq = to_date('20151230','yyyymmdd') then
                0
               WHEN gx.khh_xc is not null and gx.n4 = 1 and cjje > 0 and
                    round(s1 / cjje, 6) <= gx.n2 and s.xs = 1 and
                    s.s1 > (s.S11 + s.S12) then
                (s.s1) * coalesce(a.sl,v_zbyysl)
               
               else
                0
             end) as business_tax_zd,
         s.xybz as credit_flag,
         S.KHRQ as open_date,
         S.XHRQ as close_date,
         S.KHRQ_XY as open_date_credit,
         S.XHRQ_XY as close_date_credit,
         S.ZJBH as certi_no,
         s.khlx as org_flag,
         s.gxlx as rel_type,
         s.sxrq as effect_date,
         s.jzrq as end_date,
         s.zcqz as assets_weight,
         s.syqz as profit_weight,
         s.cbqz as cost_weight,
         s.khpz as evaluation_type,
         s.lb as cfjl_type,
         s.jb as cfjl_lvl,
         s.zhzt as cfjl_status,
         s.lzrq as dimission_date,
         s.ryrzrq as entry_date,
         s.td as team,
         s.bm as department,
         s.bmlb as depart_type,
         coalesce(hl.crncy_midrate, 1) as exchange_rate_param,
     coalesce(lb.profit_factor, 0) as profit_factor,
         s.tcfs as commission_method,
         SUM(CASE
                   WHEN ROUND(S1 / CJJE,6) < 0.00025 AND S.XS = 1 THEN
                    CJJE
                   ELSE
                    0
               END) done_balance_A,
           SUM(CASE
                   WHEN ROUND(S1 / CJJE,6) < 0.00025 AND S.XS = 1 THEN
                    S1
                   ELSE
                    0
               END) commission_A,
           SUM(CASE
                   WHEN  S.JYS NOT IN ('A', '8') AND ROUND(S1 / CJJE,6) < 0.00025 AND S.XS = 1 THEN
                    (S.S11 + S.S12)
                   ELSE
                    0
               END) market_fee_A,
           SUM(CASE
                   WHEN ROUND(S1 / CJJE,6) < 0.00025 AND S.XS = 1 AND S.S1 > (S.S11 + S.S12) THEN
                    (S.S1) * coalesce(A.SL, v_zbyysl)
                   ELSE
                    0
               END) business_tax_A
    from (select KH.KHRQ,
                 KH.XHRQ,
                 KH.KHRQ_XY,
                 KH.XHRQ_XY,
                 KH.ZJBH,
                 kh.khlx,
                 s.KHH,
                 s.JYS,
                 s.BZ,
                 s.WTFS,
                 s.YYB,
                 s.ZQDM,
                 s.ZQLB,
                 s.JYLB,
                 s.CJRQ,
                 s.CJBS,
                 s.CJSL,
                 s.CJJG,
                 s.CJJE,
                 s.LXJE,
                 s.BZS1,
                 s.JYJ,
                 s.S1,
                 s.S2,
                 s.S3,
                 s.S4,
                 s.S5,
                 s.S6,
                 s.S11,
                 s.S12,
                 s.S13,
                 s.S15,
                 s.S16,
                 s.RZRQ,
                 s.YYS,
                -- s.ZQPZ,
                  s.XYBZ,       
                 j.cfjl_id  jjr,
                 -- j.jszh jszh_id, 不需要
         '' as jszh_id,
                 j.branch_code yyb_jszh,
                 j.fund_acc_no khid,
         j.appraisal_rel as khgx,
                 case
                   when j.start_date <= s.cjrq and coalesce(j.end_date, '20990101') >= s.cjrq then
                    1
                   else
                    0
                 end xs,
                 j.emp_id gxid,
                 j.rel_type as gxlx,
                 j.start_date as sxrq,
                 j.end_date as jzrq,
                 j.asset_weight as zcqz,
                 j.income_weight as syqz,
                 j.cost_weight as cbqz,
                 j.prd_type as khpz,
                 ry.n4 lb,
                 ry.n5 jb,
                 ry.n8 zhzt,
                 ry.n3 lzrq,
                 ry.n2 ryrzrq,
                 ry.n7 td,
                 ry.n6 bm,
                 ry.n9 bmlb,
                 ry.n10 orgid,
                 '' as zqlb_crm,
                 tc.tcfs TCFS
            from temp_tjgmxls_yjlqd_20231115 s
      inner join   dwd.acc_cfjl_srvrel j
         on  s.KHH = j.fund_acc_no
        and j.start_date <= v_last_monthday
              AND coalesce(j.end_date, '20990101') >= v_first_monthday
            left join (select STRING_AGG(T.TCFS:: varchar , ';' ORDER BY T.TCFS) AS TCFS,
                             gxid
                        from staging.cfjl_crmii_ttcfs_kh t
                       where t.ksyf <= v_month:: numeric
                         and (t.jzyf >= v_month:: numeric or t.jzyf is null)
                       group by t.gxid) tc
              on tc.gxid:: varchar = j.emp_id
       
       inner join  staging.cfjl_crmii_tkhxx kh
          on kh.khh = J.fund_acc_no
             inner join tempdata_20231109 ry
          on  ry.n1 = j.cfjl_id
           where 
               s.cjje > 0
             and s.cjrq between v_first_monthday and v_last_monthday
             and s.jys <> '9'
             AND TRIM(S.JYS) <> '$') s
    left join tempdata_khgx_20231110 gx
      on gx.khh_xc = s.khh
     and gx.khgx = s.zqlb
    left join staging.cfjl_dsc_cfg_t_yyslcs a
      --on a.yyb = s.yyb
     on a.ksrq <= v_first_monthday_num
     and a.jsrq >= v_last_monthday_num
    left join tmp_prod_wind_fxrmbmidrate_20231109 hl --汇率表
      on hl.currency_type = s.bz 
     and hl.trade_date = v_last_monthday
   left join dm.jxkh_sec_stat_class lb
      on lb.sec_type = s.zqlb
   group by s.jjr,
            s.jszh_id,
            s.khh,
            s.khgx,
            s.khid,
            s.gxid,
            s.jys,
            s.yyb_jszh,
            s.orgid,
            s.bz,
            s.zqlb,
            s.wtfs,
            s.jylb,
            s.xybz,
            s.khrq,
            s.xhrq,
            s.khrq_xy,
            s.xhrq_xy,
            s.zjbh,
            s.khlx,
            s.gxlx,
            s.sxrq,
            s.jzrq,
            s.zcqz,
            s.syqz,
            s.cbqz,
            s.khpz,
            s.lb,
            s.jb,
            s.zhzt,
            s.lzrq,
            s.ryrzrq,
            s.td,
            s.bm,
            s.bmlb,
            hl.crncy_midrate,
            s.tcfs,
            lb.profit_factor)  
      DISTRIBUTED by (cfjl_id);



----step9:插入配置佣金率结果表
    v_step:='step9';
    raise notice 'step %',v_step;
--create table temp.dws_remuneration_preprocess_fund_trd_m_combine_pzyjl as 
create local temp table temp_remuneration_preprocess_fund_trd_m_pzyjl_20231115 as 
    (SELECT S.JJR as cfjl_id,
           --不需要 S.JSZH_ID,
           --不需要 S.KHID,
           S.KHGX as appraisal_rel,
           --不需要S.GXID,
           v_month::numeric as occur_month,
           S.KHH as fund_acc_no,
           S.JYS as market_code,
           S.YYB_JSZH as branch_code,
           S.ORGID as cfjl_branch_code,
           S.BZ as currency,
           S.ZQLB as sec_type,
           S.JYLB as bs,
           SUM(S.CJSL * S.XS) as trd_vol,
           SUM(S.CJJE * S.XS) as trd_amt,
           SUM(S.S1 * S.XS) as commision,
           SUM(S.CJBS * S.XS) as trd_counts,
           SUM(CASE
                   WHEN S.JYS NOT IN ('8', 'A') THEN
                    (S.S11 + S.S12) * S.XS
                   ELSE
                    0
               END) as exch_fee,
           S.WTFS as entrust_method,
           SUM(CASE
                   WHEN S.XS = 1 THEN
                    (S.S1) * coalesce(A.SL, v_zbyysl)
                   ELSE
                    0
               END) as tax_rate,
           
           SUM(CASE
                   WHEN ABS(ROUND(S1 / CJJE,6)) >= S.YJLQD AND S.XS = 1 THEN
                    CJJE
                   ELSE
                    0
               END) as trd_amt_above_comm,
           SUM(CASE
                   WHEN ABS(ROUND(S1 / CJJE,6)) >= S.YJLQD AND S.XS = 1 THEN
                    S1
                   ELSE
                    0
               END) as commision_above_comm,
           SUM(CASE
                   WHEN S.JYS NOT IN ('8', 'A') AND ABS(ROUND(S1 / CJJE,6)) >= S.YJLQD AND S.XS = 1 THEN
                    (S.S11 + S.S12)
                   ELSE
                    0
               END) as exch_fee_above_comm,
           SUM(CASE
                   WHEN ABS(ROUND(S1 / CJJE,6)) >= S.YJLQD AND S.XS = 1 AND ABS(S.S1) > (S.S11 + S.S12) THEN
                    (S.S1) * coalesce(A.SL, v_zbyysl)
                   ELSE
                    0
               END) as tax_rate_above_comm,
           SUM(CASE
                   WHEN ABS(ROUND(S1 / CJJE,6)) < S.YJLQD AND S.XS = 1 THEN
                    CJJE
                   ELSE
                    0
               END) as trd_amt_below_comm,
           SUM(CASE
                   WHEN ABS(ROUND(S1 / CJJE,6)) < S.YJLQD AND S.XS = 1 THEN
                    S1
                   ELSE
                    0
               END) as commision_below_comm,
           SUM(CASE
                   WHEN S.JYS NOT IN ('8', 'A') AND ABS(ROUND(S1 / CJJE,6)) < S.YJLQD AND S.XS = 1 THEN
                    (S.S11 + S.S12)
                   ELSE
                    0
               END) as exch_fee_below_comm,
           SUM(CASE
                   WHEN ABS(ROUND(S1 / CJJE,6)) < S.YJLQD AND S.XS = 1 AND ABS(S.S1) > (S.S11 + S.S12) THEN
                    (S.S1) * coalesce(A.SL, v_zbyysl)
                   ELSE
                    0
               END) as tax_rate_below_comm,
           S.XYBZ as fund_acc_attr,
           S.KHRQ as nor_open_date,
           S.XHRQ as nor_close_date,
           S.KHRQ_XY as crd_open_date,
           S.XHRQ_XY as crd_close_date,
           S.ZJBH as id_no,
           S.KHLX as org_flag,
           S.GXLX as rel_type,
           S.SXRQ as start_date,
           S.JZRQ as end_date,
           S.ZCQZ as asset_weight,
           S.SYQZ as income_weight,
           S.CBQZ as cost_weight,
           S.KHPZ as prd_type,
           S.LB as emp_class,
           S.JB as emp_lvl,
           S.ZHZT as account_status,
           S.LZRQ as leave_date,
           S.RYRZRQ as LZRQ,--不需要
           S.TD as team_id,
           S.BM as dept_id,
           S.BMLB as dept_type,
           coalesce(hl.crncy_midrate, 1) as exchange_rate,         
        coalesce(lb.profit_factor, 0) as profit_factor,--SYXS
           S.TCFS as percentage_method,
           S.YWLB as business_code,
           S.YJLQD as commision_rate_start
          --不需要 S.TYYBYJLQD_ID
      FROM (SELECT KH.KHRQ,
                   KH.XHRQ,
                   KH.KHRQ_XY,
                   KH.XHRQ_XY,
                   KH.ZJBH,
                   KH.KHLX,
                   S.KHH,
                   S.JYS,
                   S.BZ,
                   S.WTFS,
                   S.YYB,
                   S.ZQDM,
                   S.ZQLB,
                   S.JYLB,
                   S.CJRQ,
                   S.CJBS,
                   S.CJSL,
                   S.CJJG,
                   S.CJJE,
                   S.LXJE,
                   S.BZS1,
                   S.JYJ,
                   S.S1,
                   S.S2,
                   S.S3,
                   S.S4,
                   S.S5,
                   S.S6,
                   S.S11,
                   S.S12,
                   S.S13,
                   S.S15,
                   S.S16,
                   S.RZRQ,
                   S.YYS,
                   S.ZQPZ,
                   S.XYBZ,
                   j.cfjl_id  jjr,
                 -- j.jszh jszh_id, 不需要
         '' as jszh_id,
                 j.branch_code yyb_jszh,
                 j.fund_acc_no khid,                
         j.appraisal_rel as khgx,
                 case
                   when j.start_date <= s.cjrq and coalesce(j.end_date, '20990101') >= s.cjrq then
                    1
                   else
                    0
                 end xs,
                 j.emp_id gxid,
                 j.rel_type as gxlx,
                 j.start_date as sxrq,
                 j.end_date as jzrq,
                 j.asset_weight as zcqz,
                 j.income_weight as syqz,
                 j.cost_weight as cbqz,
                 j.prd_type as khpz,
                   RY.N4 LB,
                   RY.N5 JB,
                   RY.N8 ZHZT,
                   RY.N3 LZRQ,
                   RY.N2 RYRZRQ,
                   RY.N7 TD,
                   RY.N6 BM,
                   RY.N9 BMLB,
                   RY.N10 ORGID,
                  -- S.ZQLB_CRM,
                   TC.TCFS TCFS,
                   Q.YWLB YWLB,
                   Q.YJLQD YJLQD,
           null TYYBYJLQD_ID
              FROM temp_tjgmxls_yjlqd_20231115 S
        
        inner join temp_tyybyjlqd_20231115 Q 
        on  Q.XYBZ=S.XYBZ
        AND Q.YWLB=S.YJLYWLB
        AND Q.KSYF <= v_month::numeric
              AND (Q.JSYF >= v_month::numeric OR Q.JSYF IS NULL)
        
        inner join dwd.acc_cfjl_srvrel J 
        on   s.KHH = j.fund_acc_no
        and j.rel_type in (4,10)
        and Q.YYB = J.branch_code
        and j.start_date <= v_last_monthday
              AND coalesce(j.end_date, '20990101') >= v_first_monthday
              
              LEFT JOIN (select STRING_AGG(T.TCFS:: varchar , ';' ORDER BY T.TCFS) AS TCFS,
                             gxid
                        from staging.cfjl_crmii_ttcfs_kh t
                       where t.ksyf <= v_month:: numeric
                         and (t.jzyf >= v_month:: numeric or t.jzyf is null)
                       group by t.gxid) tc
              on tc.gxid:: varchar = j.emp_id
        
        inner join  staging.cfjl_crmii_tkhxx kh
        on kh.khh = J.fund_acc_no
        
               inner join tempdata_20231109 ry
         on ry.n1 = j.cfjl_id
           where 
             s.cjje > 0
             
              and s.cjrq between v_first_monthday and v_last_monthday
             and s.jys <> '9'
             AND TRIM(S.JYS) <> '$'
            
               ) S
    left join staging.cfjl_dsc_cfg_t_yyslcs a
     -- on a.yyb = s.yyb
     on a.ksrq <= v_first_monthday_num
     and a.jsrq >= v_last_monthday_num
      left join tmp_prod_wind_fxrmbmidrate_20231109 hl --汇率表
      on hl.currency_type = s.bz  --字典需确认
     and hl.trade_date = v_last_monthday
   left join dm.jxkh_sec_stat_class lb
      on lb.sec_type = s.zqlb
     GROUP BY S.JJR,
              S.JSZH_ID,
              S.KHH,
              S.KHGX,
              S.KHID,
              S.GXID,
              S.JYS,
              S.YYB_JSZH,
              S.ORGID,
              S.BZ,
              S.ZQLB,
              S.WTFS,
              S.JYLB,
              S.XYBZ,
              S.KHRQ,
              S.XHRQ,
              S.KHRQ_XY,
              S.XHRQ_XY,
              S.ZJBH,
              S.KHLX,
              S.GXLX,
              S.SXRQ,
              S.JZRQ,
              S.ZCQZ,
              S.SYQZ,
              S.CBQZ,
              S.KHPZ,
              S.LB,
              S.JB,
              S.ZHZT,
              S.LZRQ,
              S.RYRZRQ,
              S.TD,
              S.BM,
              S.BMLB,
              HL.crncy_midrate,
              
              S.TCFS,
           S.YWLB,
           S.YJLQD,
           lb.profit_factor)
       DISTRIBUTED by (cfjl_id);     


/*对应khydtjl*/ 
/*对应khydtjl*/
  v_step:='插入普通账户信息';
  raise notice '==============%===============:%',v_step,clock_timestamp();
  
  delete from  dm.jxkh_nor_trade_bf2018_m where occur_month::varchar>= to_char(v_end_dt,'yyyymm');
INSERT INTO dm.jxkh_nor_trade_bf2018_m
(           
 cfjl_id,  --jjr
  settle_account,  --jszh_id
  cust_id,  --khid
  appraisal_rel,  --evaluation_rel
  rel_id,  --gxid
  occur_month,  --YF
  fund_acc_no,  --khh
  market_code,  --jys
  branch_code,  --yyb_jszh
  orgnation_id,  --orgid
  currency,  --bz
  sec_type,  --zqlb
  trade_type,  --jylb
  trd_vol,  --cjsl
  trd_amt,  --jyje
  standard_comision,  --bzyj
  commission,  --yj
  trd_counts,  --jybs
  exch_fee,  --jysfy
  entrust_method,
  tax_rate,  --yys
  trd_amt_db ,  --cjje_db
  standard_comm_bd,  --bzyj_bd
  commission_bd,  --yj_bd
  exch_fee_db,  --jysfy_db
  tax_rate_db,  --yys_db
  trd_amt_zd,  --cjje_zd
  standard_commision_zd,  --bzyj_zd
  commission_zd,  --yj_zd
  exch_fee_zd,  --jysfy_zd
  tax_rate_zd,  --yys_zd
  cost ,--cb
  cost_zd,--cb_zd
  cost_bd,--cb_bd
  fund_acc_attr,  --xybz
  nor_open_date,--khrq
  nor_close_date,--xhrq
  open_date_credit, --crd_open_date
  close_date_credit,--crd_close_date
  id_no, --zjbh
  org_flag,  --grjg
  rel_type,  --gxlx
  start_date, ----sxrq
  end_date, --jzrq
  assets_weight,--zcqz
  income_weight,--syqz
  cost_weight,  --cbqz
  prd_type,--khpz
  emp_class,--rylb
  emp_lvl,--ryjb
  account_status, --zhzt
  leave_date, --lzrq
  entry_date,
  team_id, --td
  dept_id, --bm
  dept_type,--bmlb
  exchange_rate,--hlcs
  percentage_method,  --tcfs
  trd_amt_u25,--cjje_a
  commision_u25,--yj_a
  exch_fee_u25, --jysfy_a
  tax_rate_25, --yys_a
  COST_U25,--CB_A
  profit_factor  --syxs
  )  
select            
cfjl_id,
  settle_account,  --jszh_id
  cust_id,  --khid
  evaluation_rel,  --khgx
  rel_id,  ---gxid
  occur_month,   --yf
  fund_acc_no,  --khh
  market_code,    --jys
  branch_code,    --yyb
  orgnation_id,    --orgid
  currency_type,    --bz
  fund_type,    --zqlb
  trade_type,  --jylb
  done_vol,    --cjsl
  done_balance,  --jyje
  standard_comm,  --bzyj
  commission,  --yj
  done_amount,  --jybs
  market_fee,  --jysfy
  entrust_method,  --wtfs
  business_tax,  --yys
  done_amount_bd ,  --cjje_db
  standard_comm_bd, --bzyj_bd
  commission_bd,  --yj_bd
  market_fee_bd,  --jysfy_db
  business_tax_bd, --yys_db
  done_balance_zd, --cjje_zd
  standard_zd,  --bzyj_zd
  commission_zd,  --yj_zd
  market_fee_zd,  ---jysfy_zd
  business_tax_zd,  --yys_zd
  0 as cost ,  --cb
  0 as cost_zd,  --cb_zd
  0 as cost_bd,  --cb_bd
  credit_flag,  --xybz
  tools.date_trans(open_date),  --khrq
  tools.date_trans(close_date),  --xhrq
  tools.date_trans(open_date_credit),  --khrq_xy
  tools.date_trans(close_date_credit), --xhrq_xy
  certi_no,--zjbh
  org_flag,  ----grjg
  rel_type,  --gxlx
  effect_date,  --sxrq
  end_date,  --jzrq
  assets_weight, --zcqz
  profit_weight, --syqz
  cost_weight,  --cbqz
  evaluation_type, --khpz
  cfjl_type, --rylb
  cfjl_lvl,  --ryjb
  cfjl_status, --zhzt
  tools.date_trans(dimission_date),  --lzrq
  tools.date_trans(entry_date), --rzrq
  team, --td
  department,  --bm
  depart_type, --bmlb
  exchange_rate_param,  --hlcs
  commission_method, --tcfs
  done_balance_A,  --cjje_a
  commission_A, --yj_a
  market_fee_A,  --jysfy_a
  business_tax_A,  --yys_a
  0 as cb_a ,--CB_A
  profit_factor  --syxs
  FROM temp_remuneration_preprocess_fund_trd_m_20231109  t   --XC_DATA.T_XC_YCL_ZQJY_Y T
       WHERE T.occur_month = to_char(v_end_dt,'yyyymm')
         AND T.open_date < 20180101
         and T.fund_acc_no::varchar not IN (SELECT LPAD(A.KHH::varchar, 8, '0')
                             FROM staging.cfjl_crmii_txckhbmd  A
                            WHERE A.ZHLX = 1
                              /*AND A.CLBZ = 2*/)        
         AND T.credit_flag = 0
union all 
select            
cfjl_id,
  settle_account,  --jszh_id
  cust_id,  --khid
  evaluation_rel,  --khgx
  rel_id,  ---gxid
  occur_month,   --yf
  fund_acc_no,  --khh
  market_code,    --jys
  branch_code,    --yyb
  orgnation_id,    --orgid
  currency_type,    --bz
  fund_type,    --zqlb
  trade_type,  --jylb
  done_vol,    --cjsl
  done_balance,  --jyje
  standard_comm,  --bzyj
  commission,  --yj
  done_amount,  --jybs
  market_fee,  --jysfy
  entrust_method,  --wtfs
  business_tax,  --yys
  done_amount_bd ,  --cjje_db
  standard_comm_bd, --bzyj_bd
  commission_bd,  --yj_bd
  market_fee_bd,  --jysfy_db
  business_tax_bd, --yys_db
  done_balance_zd, --cjje_zd
  standard_zd,  --bzyj_zd
  commission_zd,  --yj_zd
  market_fee_zd,  ---jysfy_zd
  business_tax_zd,  --yys_zd
  0 as cost ,  --cb
  0 as cost_zd,  --cb_zd
  0 as cost_bd,  --cb_bd
  credit_flag,  --xybz
  tools.date_trans(open_date),  --khrq
  tools.date_trans(close_date),  --xhrq
  tools.date_trans(open_date_credit),  --khrq_xy
  tools.date_trans(close_date_credit), --xhrq_xy
  certi_no,--zjbh
  org_flag,  ----grjg
  rel_type,  --gxlx
  effect_date,  --sxrq
  end_date,  --jzrq
  assets_weight, --zcqz
  profit_weight, --syqz
  cost_weight,  --cbqz
  evaluation_type, --khpz
  cfjl_type, --rylb
  cfjl_lvl,  --ryjb
  cfjl_status, --zhzt
  tools.date_trans(dimission_date),  --lzrq
  tools.date_trans(entry_date), --rzrq
  team, --td
  department,  --bm
  depart_type, --bmlb
  exchange_rate_param,  --hlcs
  commission_method, --tcfs
  done_balance_A,  --cjje_a
  commission_A, --yj_a
  market_fee_A,  --jysfy_a
  business_tax_A,  --yys_a
  0 as cb_a ,--CB_A
  profit_factor  --syxs
   FROM temp_remuneration_preprocess_fund_trd_m_20231109 T1
       WHERE T1.occur_month = to_char(v_end_dt,'yyyymm')
         AND T1.fund_acc_no::varchar IN (SELECT LPAD(A.KHH::varchar, 8, '0')
                         FROM staging.cfjl_crmii_txckhbmd A
                        WHERE A.ZHLX = 1
                          AND A.CLBZ = 2)
         AND T1.credit_flag = 0;

    get diagnostics v_row_cnt = row_count;
    perform monitor.sp_job_insert_log(v_job_nm, 'dm.jxkh_nor_trade_bf2018_m', p_start_dt, p_end_dt, v_row_cnt);

/*对应pro_sjtj_khydtjl_xy*/

  v_step:='插入信用账户信息';
  raise notice '==============%===============:%',v_step,clock_timestamp();
  
  
delete from dm.jxkh_crd_trade_bf2018_m where occur_month::varchar>= to_char(v_end_dt,'yyyymm');
INSERT INTO dm.jxkh_crd_trade_bf2018_m
(          
 cfjl_id,  --jjr
  settle_account,  --jszh_id
  cust_id,  --khid
  appraisal_rel,  --evaluation_rel
  rel_id,  --gxid
  occur_month,  --YF
  fund_acc_no,  --khh
  market_code,  --jys
  branch_code,  --yyb_jszh
  orgnation_id,  --orgid
  currency,  --bz
  sec_type,  --zqlb
  trade_type,  --jylb
  trd_vol,  --cjsl
  trd_amt,  --jyje
  standard_comision,  --bzyj
  commission,  --yj
  trd_counts,  --jybs
  exch_fee,  --jysfy
  entrust_method,
  tax_rate,  --yys
  trd_amt_db ,  --cjje_db
  standard_comm_bd,  --bzyj_bd
  commission_bd,  --yj_bd
  exch_fee_db,  --jysfy_db
  tax_rate_db,  --yys_db
  trd_amt_zd,  --cjje_zd
  standard_commision_zd,  --bzyj_zd
  commission_zd,  --yj_zd
  exch_fee_zd,  --jysfy_zd
  tax_rate_zd,  --yys_zd
  cost ,--cb
  cost_zd,--cb_zd
  cost_bd,--cb_bd
  fund_acc_attr,  --xybz
  nor_open_date,--khrq
  nor_close_date,--xhrq
  open_date_credit, --crd_open_date
  close_date_credit,--crd_close_date
  id_no, --zjbh
  org_flag,  --grjg
  rel_type,  --gxlx
  start_date, ----sxrq
  end_date, --jzrq
  assets_weight,--zcqz
  income_weight,--syqz
  cost_weight,  --cbqz
  prd_type,--khpz
  emp_class,--rylb
  emp_lvl,--ryjb
  account_status, --zhzt
  leave_date, --lzrq
  entry_date,
  team_id, --td
  dept_id, --bm
  dept_type,--bmlb
  exchange_rate,--hlcs
  percentage_method,  --tcfs
  trd_amt_u25,--cjje_a
  commision_u25,--yj_a
  exch_fee_u25, --jysfy_a
  tax_rate_25, --yys_a
  COST_U25,--CB_A
  profit_factor  --syxs
  )          
select            
cfjl_id,
  settle_account,  --jszh_id
  cust_id,  --khid
  evaluation_rel,  --khgx
  rel_id,  ---gxid
  occur_month,   --yf
  fund_acc_no,  --khh
  market_code,    --jys
  branch_code,    --yyb
  orgnation_id,    --orgid
  currency_type,    --bz
  fund_type,    --zqlb
  trade_type,  --jylb
  done_vol,    --cjsl
  done_balance,  --jyje
  standard_comm,  --bzyj
  commission,  --yj
  done_amount,  --jybs
  market_fee,  --jysfy
  entrust_method,  --wtfs
  business_tax,  --yys
  done_amount_bd ,  --cjje_db
  standard_comm_bd, --bzyj_bd
  commission_bd,  --yj_bd
  market_fee_bd,  --jysfy_db
  business_tax_bd, --yys_db
  done_balance_zd, --cjje_zd
  standard_zd,  --bzyj_zd
  commission_zd,  --yj_zd
  market_fee_zd,  ---jysfy_zd
  business_tax_zd,  --yys_zd
  0 as cost ,  --cb
  0 as cost_zd,  --cb_zd
  0 as cost_bd,  --cb_bd
  credit_flag,  --xybz
  tools.date_trans(open_date),  --khrq
  tools.date_trans(close_date),  --xhrq
  tools.date_trans(open_date_credit),  --khrq_xy
  tools.date_trans(close_date_credit), --xhrq_xy
  certi_no,--zjbh
  org_flag,  ----grjg
  rel_type,  --gxlx
  effect_date,  --sxrq
  end_date,  --jzrq
  assets_weight, --zcqz
  profit_weight, --syqz
  cost_weight,  --cbqz
  evaluation_type, --khpz
  cfjl_type, --rylb
  cfjl_lvl,  --ryjb
  cfjl_status, --zhzt
  tools.date_trans(dimission_date),  --lzrq
  tools.date_trans(entry_date), --rzrq
  team, --td
  department,  --bm
  depart_type, --bmlb
  exchange_rate_param,  --hlcs
  commission_method, --tcfs
  done_balance_A,  --cjje_a
  commission_A, --yj_a
  market_fee_A,  --jysfy_a
  business_tax_A,  --yys_a
  0 as cb_a ,--CB_A
  profit_factor  --syxs
  FROM temp_remuneration_preprocess_fund_trd_m_20231109  t   --XC_DATA.T_XC_YCL_ZQJY_Y T
       WHERE T.occur_month::varchar = to_char(v_end_dt,'yyyymm')
         AND T.open_date_credit < 20180101
         and T.fund_acc_no not IN (SELECT LPAD(A.KHH::varchar, 8, '0')
                             FROM staging.cfjl_crmii_txckhbmd  A
                            WHERE A.ZHLX = 1
                              /*AND A.CLBZ = 2*/)        
         AND T.credit_flag = 1
union all           
select            
cfjl_id,
  settle_account,  --jszh_id
  cust_id,  --khid
  evaluation_rel,  --khgx
  rel_id,  ---gxid
  occur_month,   --yf
  fund_acc_no,  --khh
  market_code,    --jys
  branch_code,    --yyb
  orgnation_id,    --orgid
  currency_type,    --bz
  fund_type,    --zqlb
  trade_type,  --jylb
  done_vol,    --cjsl
  done_balance,  --jyje
  standard_comm,  --bzyj
  commission,  --yj
  done_amount,  --jybs
  market_fee,  --jysfy
  entrust_method,  --wtfs
  business_tax,  --yys
  done_amount_bd ,  --cjje_db
  standard_comm_bd, --bzyj_bd
  commission_bd,  --yj_bd
  market_fee_bd,  --jysfy_db
  business_tax_bd, --yys_db
  done_balance_zd, --cjje_zd
  standard_zd,  --bzyj_zd
  commission_zd,  --yj_zd
  market_fee_zd,  ---jysfy_zd
  business_tax_zd,  --yys_zd
  0 as cost ,  --cb
  0 as cost_zd,  --cb_zd
  0 as cost_bd,  --cb_bd
  credit_flag,  --xybz
  tools.date_trans(open_date),  --khrq
  tools.date_trans(close_date),  --xhrq
  tools.date_trans(open_date_credit),  --khrq_xy
  tools.date_trans(close_date_credit), --xhrq_xy
  certi_no,--zjbh
  org_flag,  ----grjg
  rel_type,  --gxlx
  effect_date,  --sxrq
  end_date,  --jzrq
  assets_weight, --zcqz
  profit_weight, --syqz
  cost_weight,  --cbqz
  evaluation_type, --khpz
  cfjl_type, --rylb
  cfjl_lvl,  --ryjb
  cfjl_status, --zhzt
  tools.date_trans(dimission_date),  --lzrq
  tools.date_trans(entry_date), --rzrq
  team, --td
  department,  --bm
  depart_type, --bmlb
  exchange_rate_param,  --hlcs
  commission_method, --tcfs
  done_balance_A,  --cjje_a
  commission_A, --yj_a
  market_fee_A,  --jysfy_a
  business_tax_A,  --yys_a
  0 as cb_a ,--CB_A
  profit_factor  --syxs
   FROM temp_remuneration_preprocess_fund_trd_m_20231109 T1
       WHERE T1.occur_month::varchar = to_char(v_end_dt,'yyyymm')
         AND T1.fund_acc_no IN (SELECT LPAD(A.KHH::varchar, 8, '0')
                         FROM staging.cfjl_crmii_txckhbmd A
                        WHERE A.ZHLX = 1
                          AND A.CLBZ = 2)
         AND T1.credit_flag = 1;



      get diagnostics v_row_cnt = row_count;
    perform monitor.sp_job_insert_log(v_job_nm, 'dm.jxkh_crd_trade_bf2018_m', p_start_dt, p_end_dt, v_row_cnt);  
       
/*对应pro_sjtj_khydtjl_pzyjl*/
/*插入普通账户信息*/
  v_step:='插入普通账户信息';
  raise notice '==============%===============:%',v_step,clock_timestamp();
delete from dm.jxkh_nor_trade_af2018_m where occur_month::varchar>= to_char(v_end_dt,'yyyymm');
INSERT INTO dm.jxkh_nor_trade_af2018_m
(           
          cfjl_id,--jjr
                  appraisal_rel, --evaluation_rel
          occur_month, --YF
          fund_acc_no, --khh
          market_code, --jys
          branch_code,--yyb
          cfjl_branch_code, 
          currency,--bz
          sec_type, --zqlb
          bs, --jylb
          trd_vol,--cjsl
          trd_amt,--jyje
          commision, --yj
          trd_counts,--jybs
          exch_fee,--jysfy
          entrust_method,
          tax_rate,--yys
          trd_amt_above_comm,--cjje_s
          commision_above_comm,--yj_s
          exch_fee_above_comm,--jysfy_s
          tax_rate_above_comm,--yys_s
          trd_amt_below_comm,--cjje_x
          commision_below_comm,--yj_x
          exch_fee_below_comm,--jysfy_x
          tax_rate_below_comm,--yys_x
          cost,--cb
          cost_above_comm,--cb_s
          cost_below_comm,--cb_x
                    fund_acc_attr,--xybz
                    nor_open_date,--khrq
                    nor_close_date,--xhrq
          crd_open_date,--crd_open_date
          crd_close_date,--crd_close_date
          id_no, --zjbh
          org_flag,--grjg
          rel_type,--gxlx
          start_date, --sxrq
          end_date,--jzrq
          asset_weight,--zcqz
          income_weight,--syqz
          cost_weight,--cbqz
          prd_type,--khpz
          emp_class,--rylb
          emp_lvl,--ryjb
          account_status,--zhzt
          leave_date,--lzrq
          team_id,--td
          dept_id,--bm
          dept_type,--bmlb
          exchange_rate,--hlcs
          percentage_method, --tcfs
          business_code,--ywlb
          commision_rate_start,--yjlqd
          profit_factor  --syxs
          ) 

select   
          cfjl_id,
                  appraisal_rel,
          occur_month:: varchar,
          fund_acc_no,
          market_code,
          branch_code,
          cfjl_branch_code,
          currency,
          sec_type,
          bs,
          trd_vol,
          trd_amt,
          commision,
          trd_counts,
          exch_fee,
          entrust_method,
          tax_rate,
          trd_amt_above_comm,
          commision_above_comm,
          exch_fee_above_comm,
          tax_rate_above_comm,
          trd_amt_below_comm,
          commision_below_comm,
          exch_fee_below_comm,
          tax_rate_below_comm,
          0 as cost,--cb
          0 as cost_above_comm,--cb_s
          0 as cost_below_comm,--cb_x
                    fund_acc_attr,
                    tools.date_trans(nor_open_date),
                    tools.date_trans(nor_close_date),
          tools.date_trans(crd_open_date),
          tools.date_trans(crd_close_date),
          id_no,
          org_flag,
          rel_type,
          start_date,
          end_date,
          asset_weight,
          income_weight,
          cost_weight,
          prd_type,
          emp_class,
          emp_lvl,
          account_status,
          tools.date_trans(leave_date),
          team_id,
          dept_id,
          dept_type,
          exchange_rate,
          percentage_method,
          business_code,
          commision_rate_start,
          profit_factor
  FROM temp_remuneration_preprocess_fund_trd_m_pzyjl_20231115  T  --XC_DATA.T_XC_YCL_ZQJY_Y_PZYJL T
       WHERE T.occur_month::varchar = to_char(v_end_dt,'yyyymm')
         AND t.nor_open_date >= 20180101
         and T.fund_acc_no not IN (SELECT LPAD(A.KHH::varchar, 8, '0')
                             FROM staging.cfjl_crmii_txckhbmd  A
                            WHERE A.ZHLX = 2
                             /* AND A.CLBZ = 1*/)
         AND T.fund_acc_attr = 0

union all 
select 
          cfjl_id,
                  appraisal_rel,
          occur_month:: varchar,
          fund_acc_no,
          market_code,
          branch_code,
          cfjl_branch_code,
          currency,
          sec_type,
          bs,
          trd_vol,
          trd_amt,
          commision,
          trd_counts,
          exch_fee,
          entrust_method,
          tax_rate,
          trd_amt_above_comm,
          commision_above_comm,
          exch_fee_above_comm,
          tax_rate_above_comm,
          trd_amt_below_comm,
          commision_below_comm,
          exch_fee_below_comm,
          tax_rate_below_comm,
          0 as cost,--cb
          0 as cost_above_comm,--cb_s
          0 as cost_below_comm,--cb_x
                    fund_acc_attr,
                    tools.date_trans(nor_open_date),
                    tools.date_trans(nor_close_date),
          tools.date_trans(crd_open_date),
          tools.date_trans(crd_close_date),
          id_no,
          org_flag,
          rel_type,
          start_date,
          end_date,
          asset_weight,
          income_weight,
          cost_weight,
          prd_type,
          emp_class,
          emp_lvl,
          account_status,
          tools.date_trans(leave_date),
          team_id,
          dept_id,
          dept_type,
          exchange_rate,
          percentage_method,
          business_code,
          commision_rate_start,
          profit_factor
     FROM temp_remuneration_preprocess_fund_trd_m_pzyjl_20231115 T1 --XC_DATA.T_XC_YCL_ZQJY_Y_PZYJL T
       WHERE T1.occur_month::varchar = to_char(v_end_dt,'yyyymm')
         AND T1.fund_acc_no IN (SELECT LPAD(A.KHH::varchar, 8, '0')
                         FROM staging.cfjl_crmii_txckhbmd  A
                        WHERE A.ZHLX = 2
                          AND A.CLBZ = 1)
         AND T1.fund_acc_attr = 0;

    get diagnostics v_row_cnt = row_count;
    perform monitor.sp_job_insert_log(v_job_nm, 'dm.jxkh_nor_trade_af2018_m', p_start_dt, p_end_dt, v_row_cnt);

/*对应pro_sjtj_khydtjl_xy_pzyjl*/
  v_step:='插入信用账户信息';
  raise notice '==============%===============:%',v_step,clock_timestamp();
 
delete from dm.jxkh_crd_trade_af2018_m where occur_month::varchar>= to_char(v_end_dt,'yyyymm');
INSERT INTO dm.jxkh_crd_trade_af2018_m
(
          cfjl_id,
                  appraisal_rel,
          occur_month,
          fund_acc_no,
          market_code,
          branch_code,
          cfjl_branch_code,
          currency,
          sec_type,
          bs,
          trd_vol,
          trd_amt,
          commision,
          trd_counts,
          exch_fee,
          entrust_method,
          tax_rate,
          trd_amt_above_comm,
          commision_above_comm,
          exch_fee_above_comm,
          tax_rate_above_comm,
          trd_amt_below_comm,
          commision_below_comm,
          exch_fee_below_comm,
          tax_rate_below_comm,
          cost,--cb
          cost_above_comm,--cb_s
          cost_below_comm,--cb_x
                    fund_acc_attr,
                    nor_open_date,
                    nor_close_date,
          crd_open_date,
          crd_close_date,
          id_no,
          org_flag,
          rel_type,
          start_date,
          end_date,
          asset_weight,
          income_weight,
          cost_weight,
          prd_type,
          emp_class,
          emp_lvl,
          account_status,
          leave_date,
          team_id,
          dept_id,
          dept_type,
          exchange_rate,
          percentage_method,
          business_code,
          commision_rate_start,
          profit_factor)

select   
          cfjl_id,
                  appraisal_rel,
          occur_month:: varchar,
          fund_acc_no,
          market_code,
          branch_code,
          cfjl_branch_code,
          currency,
          sec_type,
          bs,
          trd_vol,
          trd_amt,
          commision,
          trd_counts,
          exch_fee,
          entrust_method,
          tax_rate,
          trd_amt_above_comm,
          commision_above_comm,
          exch_fee_above_comm,
          tax_rate_above_comm,
          trd_amt_below_comm,
          commision_below_comm,
          exch_fee_below_comm,
          tax_rate_below_comm,
          0 as cost,--cb
          0 as cost_above_comm,--cb_s
          0 as cost_below_comm,--cb_x
                    fund_acc_attr,
                    tools.date_trans(nor_open_date),
                    tools.date_trans(nor_close_date),
          tools.date_trans(crd_open_date),
          tools.date_trans(crd_close_date),
          id_no,
          org_flag,
          rel_type,
          tools.date_trans(start_date),
          tools.date_trans(end_date),
          asset_weight,
          income_weight,
          cost_weight,
          prd_type,
          emp_class,
          emp_lvl,
          account_status,
          tools.date_trans(leave_date),
          team_id,
          dept_id,
          dept_type,
          exchange_rate,
          percentage_method,
          business_code,
          commision_rate_start,
          profit_factor
  FROM temp_remuneration_preprocess_fund_trd_m_pzyjl_20231115  T --XC_DATA.T_XC_YCL_ZQJY_Y_PZYJL T
       WHERE T.occur_month::varchar = to_char(v_end_dt,'yyyymm')
         AND t.crd_open_date >= 20180101
         and T.fund_acc_no not IN (SELECT LPAD(A.KHH::varchar, 8, '0')
                             FROM staging.cfjl_crmii_txckhbmd  A
                            WHERE A.ZHLX = 2
                             /* AND A.CLBZ = 1*/)
         AND T.fund_acc_attr = 1

union all 
select 
          cfjl_id,
                  appraisal_rel,
          occur_month:: varchar,
          fund_acc_no,
          market_code,
          branch_code,
          cfjl_branch_code,
          currency,
          sec_type,
          bs,
          trd_vol,
          trd_amt,
          commision,
          trd_counts,
          exch_fee,
          entrust_method,
          tax_rate,
          trd_amt_above_comm,
          commision_above_comm,
          exch_fee_above_comm,
          tax_rate_above_comm,
          trd_amt_below_comm,
          commision_below_comm,
          exch_fee_below_comm,
          tax_rate_below_comm,
          0 as cost,--cb
          0 as cost_above_comm,--cb_s
          0 as cost_below_comm,--cb_x
                    fund_acc_attr,
                    tools.date_trans(nor_open_date),
                    tools.date_trans(nor_close_date),
          tools.date_trans(crd_open_date),
          tools.date_trans(crd_close_date),
          id_no,
          org_flag,
          rel_type,
          tools.date_trans(start_date),
          tools.date_trans(end_date),
          asset_weight,
          income_weight,
          cost_weight,
          prd_type,
          emp_class,
          emp_lvl,
          account_status,
          tools.date_trans(leave_date),
          team_id,
          dept_id,
          dept_type,
          exchange_rate,
          percentage_method,
          business_code,
          commision_rate_start,
          profit_factor
     FROM temp_remuneration_preprocess_fund_trd_m_pzyjl_20231115 T1 --XC_DATA.T_XC_YCL_ZQJY_Y_PZYJL T
       WHERE T1.occur_month::varchar = to_char(v_end_dt,'yyyymm')
         AND T1.fund_acc_no IN (SELECT LPAD(A.KHH::varchar, 8, '0')
                         FROM staging.cfjl_crmii_txckhbmd  A
                        WHERE A.ZHLX = 2
                          AND A.CLBZ = 1)
         AND T1.fund_acc_attr = 1;
     
      get diagnostics v_row_cnt = row_count;
    perform monitor.sp_job_insert_log(v_job_nm, 'dm.jxkh_crd_trade_af2018_m', p_start_dt, p_end_dt, v_row_cnt);       
 ----step7:删除临时表
    v_step:='step2';
    drop table if exists tempdata_20231109;
    drop table if exists tempdata_khgx_20231109;
    drop table if exists tempdata_khgx_20231110;
    drop table if exists tmp_prod_wind_fxrmbmidrate_20231109;
    drop table if exists temp_remuneration_preprocess_fund_trd_m_pzyjl_20231115;
    drop table if exists temp_remuneration_preprocess_fund_trd_m_20231109;
   
    get diagnostics v_row_cnt = row_count;
    perform monitor.sp_job_insert_log(v_job_nm, '', p_start_dt, p_end_dt, v_row_cnt);
end loop;

    raise notice '==============执行结束===============:%',clock_timestamp();
    select clock_timestamp() into v_run_end;

  --5.运行日志×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××--
      perform monitor.sp_job_run_log(v_job_nm, p_start_dt, p_end_dt, v_start_dt, v_end_dt, v_run_start, v_run_end, v_return_code, null);
    --数据执行没异常，返回0
    return v_return_code;

  --6.异常处理×××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××××--
exception
    when others then
        raise notice 'ERROR:SQLSTATE:%,SQLERRM:%',sqlstate,sqlerrm;
        select clock_timestamp() into v_run_end;
        v_return_code := 1; -- 返回值置为1，记录作业运行日志(错误日志)
        perform monitor.sp_job_run_log(v_job_nm, p_start_dt, p_end_dt, v_start_dt, v_end_dt, v_run_start, v_run_end, v_return_code, coalesce(v_step, '') || ' error:' || sqlerrm);
        return v_return_code;
end;



$function$
;

-- Permissions

ALTER FUNCTION dm.sp_jxkh_nor_crd_trade_m(bpchar, bpchar) OWNER TO gpadmin;
GRANT ALL ON FUNCTION dm.sp_jxkh_nor_crd_trade_m(bpchar, bpchar) TO public;
GRANT ALL ON FUNCTION dm.sp_jxkh_nor_crd_trade_m(bpchar, bpchar) TO gpadmin;
